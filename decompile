contract Contract {
    function main() {
        memory[0x40:0x60] = 0x80;
    
        if (msg.data.length >= 0x04) {
            var0 = msg.data[0x00:0x20] >> 0xe0;
        
            if (0x9e281a98 > var0) {
                if (0x57c8e3f9 > var0) {
                    if (var0 == 0x18780684) {
                        // Dispatch table entry for 0x18780684 (unknown)
                        var1 = msg.value;
                    
                        if (var1) { revert(memory[0x00:0x00]); }
                    
                        var1 = 0x01d6;
                        var2 = 0x0277;
                        var3 = msg.data.length;
                        var4 = 0x04;
                        var2, var3, var4, var5 = func_4AC2(var3, var4);
                        memory[0x00:0x20] = tx.origin;
                        memory[0x20:0x40] = 0x00;
                    
                        if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
                    
                        if (storage[0x0d] == 0x02) {
                            var6 = 0x0728;
                            var7 = var2;
                            var8 = var3;
                            var9 = var4;
                            var10 = var5;
                            func_12D4(var7, var8, var9, var10);
                        
                        label_0728:
                            // Error: Could not resolve jump destination!
                        } else {
                            var temp8 = memory[0x40:0x60];
                            memory[temp8:temp8 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                            memory[temp8 + 0x04:temp8 + 0x04 + 0x20] = 0x20;
                            memory[temp8 + 0x24:temp8 + 0x24 + 0x20] = 0x0a;
                            memory[temp8 + 0x44:temp8 + 0x44 + 0x20] = 0x6f6e6c7920656e74727900000000000000000000000000000000000000000000;
                            var6 = temp8 + 0x64;
                            goto label_0161;
                        }
                    } else if (var0 == 0x2c8958f6) {
                        // Dispatch table entry for 0x2c8958f6 (unknown)
                        var1 = msg.value;
                    
                        if (var1) { revert(memory[0x00:0x00]); }
                    
                        var1 = 0x01d6;
                        var2 = 0x0297;
                        var3 = msg.data.length;
                        var4 = 0x04;
                        var2, var3, var4, var5 = func_4AC2(var3, var4);
                        memory[0x00:0x20] = tx.origin;
                        memory[0x20:0x40] = 0x00;
                    
                        if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
                    
                        if (storage[0x0d] == 0x02) {
                            var6 = 0x0728;
                            var7 = var2;
                            var8 = var3;
                            var9 = var4;
                            var10 = var5;
                            func_1356(var7, var8, var9, var10);
                            goto label_0728;
                        } else {
                            var temp9 = memory[0x40:0x60];
                            memory[temp9:temp9 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                            memory[temp9 + 0x04:temp9 + 0x04 + 0x20] = 0x20;
                            memory[temp9 + 0x24:temp9 + 0x24 + 0x20] = 0x0a;
                            memory[temp9 + 0x44:temp9 + 0x44 + 0x20] = 0x6f6e6c7920656e74727900000000000000000000000000000000000000000000;
                            var6 = temp9 + 0x64;
                            goto label_0161;
                        }
                    } else if (var0 == 0x3ffe2ee7) {
                        // Dispatch table entry for 0x3ffe2ee7 (unknown)
                        var1 = msg.value;
                    
                        if (var1) { revert(memory[0x00:0x00]); }
                    
                        var1 = 0x02bc;
                        var2 = 0x02b7;
                        var3 = msg.data.length;
                        var4 = 0x04;
                        var2 = func_4B15(var3, var4);
                        var2 = func_02B7(var2);
                    
                    label_02BC:
                        var temp10 = memory[0x40:0x60];
                        memory[temp10:temp10 + 0x20] = var2;
                        var2 = temp10 + 0x20;
                    
                    label_02C6:
                        var temp11 = memory[0x40:0x60];
                        return memory[temp11:temp11 + var2 - temp11];
                    } else { goto label_00DD; }
                } else if (var0 == 0x57c8e3f9) {
                    // Dispatch table entry for 0x57c8e3f9 (unknown)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x01d6;
                    var2 = 0x02ea;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2, var3, var4, var5, var6, var7, var8, var9, var10 = func_4B73(var3, var4);
                    func_02EA(var2, var3, var4, var5, var6, var7, var8, var9, var10);
                    stop();
                } else if (var0 == 0x6f6e0187) {
                    // Dispatch table entry for 0x6f6e0187 (unknown)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x02bc;
                    var2 = 0x030a;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12 = func_4C43(var3, var4);
                    var1 = func_030A(var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12);
                    goto label_02BC;
                } else if (var0 == 0x783d30c4) {
                    // Dispatch table entry for 0x783d30c4 (unknown)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x01d6;
                    var2 = 0x032a;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2, var3, var4, var5, var6, var7, var8, var9, var10 = func_4B73(var3, var4);
                    func_032A(var2, var3, var4, var5, var6, var7, var8, var9, var10);
                    stop();
                } else { goto label_00DD; }
            } else if (0xc53d4902 > var0) {
                if (var0 == 0x9e281a98) {
                    // Dispatch table entry for withdrawToken(address,uint256)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x01d6;
                    var2 = 0x034a;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2, var3 = func_4D50(var3, var4);
                    func_034A(var2, var3);
                    stop();
                } else if (var0 == 0xc0ce282a) {
                    // Dispatch table entry for 0xc0ce282a (unknown)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x01d6;
                    var2 = 0x036a;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2 = func_4E6A(var3, var4);
                    func_036A(var2);
                    stop();
                } else if (var0 == 0xc311d049) {
                    // Dispatch table entry for withdrawEth(uint256)
                    var1 = msg.value;
                
                    if (var1) { revert(memory[0x00:0x00]); }
                
                    var1 = 0x01d6;
                    var2 = 0x038a;
                    var3 = msg.data.length;
                    var4 = 0x04;
                    var2 = func_4B15(var3, var4);
                    func_038A(var2);
                    stop();
                } else { goto label_00DD; }
            } else if (var0 == 0xc53d4902) {
                // Dispatch table entry for 0xc53d4902 (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x02bc;
                var2 = 0x03aa;
                var3 = msg.data.length;
                var4 = 0x04;
                var2, var3, var4, var5, var6, var7, var8 = func_4F09(var3, var4);
                var1 = func_03AA(var2, var3, var4, var5, var6, var7, var8);
                goto label_02BC;
            } else if (var0 == 0xd3e1c284) {
                // Dispatch table entry for 0xd3e1c284 (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x01d6;
                var2 = 0x03ca;
                var3 = msg.data.length;
                var4 = 0x04;
                var2, var3, var4, var5 = func_4AC2(var3, var4);
                memory[0x00:0x20] = tx.origin;
                memory[0x20:0x40] = 0x00;
            
                if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
            
                if (storage[0x0d] == 0x02) {
                    var6 = 0x0728;
                    var7 = var2;
                    var8 = var3;
                    var9 = var4;
                    var10 = var5;
                    func_1B87(var7, var8, var9, var10);
                    goto label_0728;
                } else {
                    var temp12 = memory[0x40:0x60];
                    memory[temp12:temp12 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                    memory[temp12 + 0x04:temp12 + 0x04 + 0x20] = 0x20;
                    memory[temp12 + 0x24:temp12 + 0x24 + 0x20] = 0x0a;
                    memory[temp12 + 0x44:temp12 + 0x44 + 0x20] = 0x6f6e6c7920656e74727900000000000000000000000000000000000000000000;
                    var6 = temp12 + 0x64;
                    goto label_0161;
                }
            } else if (var0 == 0xf851a440) {
                // Dispatch table entry for admin()
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x0403;
                var2 = 0x0000000000000000000000003f2007cdef657719c65ec77e71b7487d16f0fa00;
                var temp13 = memory[0x40:0x60];
                memory[temp13:temp13 + 0x20] = var2 & 0xffffffffffffffffffffffffffffffffffffffff;
                var2 = temp13 + 0x20;
                goto label_02C6;
            } else if (var0 == 0xfa483e72) {
                // Dispatch table entry for 0xfa483e72 (unknown)
                var1 = msg.value;
            
                if (var1) { revert(memory[0x00:0x00]); }
            
                var1 = 0x01d6;
                var2 = 0x0443;
                var3 = msg.data.length;
                var4 = 0x04;
                var2, var3, var4, var5 = func_4AC2(var3, var4);
                memory[0x00:0x20] = tx.origin;
                memory[0x20:0x40] = 0x00;
            
                if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
            
                if (storage[0x0d] == 0x02) {
                    var6 = 0x0728;
                    var7 = var2;
                    var8 = var3;
                    var9 = var4;
                    var10 = var5;
                    func_1BDD(var7, var8, var9, var10);
                    goto label_0728;
                } else {
                    var temp14 = memory[0x40:0x60];
                    memory[temp14:temp14 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                    memory[temp14 + 0x04:temp14 + 0x04 + 0x20] = 0x20;
                    memory[temp14 + 0x24:temp14 + 0x24 + 0x20] = 0x0a;
                    memory[temp14 + 0x44:temp14 + 0x44 + 0x20] = 0x6f6e6c7920656e74727900000000000000000000000000000000000000000000;
                    var6 = temp14 + 0x64;
                    goto label_0161;
                }
            } else { goto label_00DD; }
        } else if (msg.data.length) {
        label_00DD:
            memory[0x00:0x20] = tx.origin;
            memory[0x20:0x40] = 0x00;
        
            if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
        
            if (storage[0x0d] == 0x02) {
                var var0 = msg.data[msg.data.length + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0:msg.data.length + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0 + 0x20];
            
                if (!(var0 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01)) {
                    var1 = 0x00;
                    var2 = var1;
                    var3 = 0x01c0;
                    var3, var4, var5 = func_0448();
                    var2 = var5;
                    var1 = var3;
                
                    if (!var1) { stop(); }
                
                    var3 = 0x01d6;
                    var4 = 0x00;
                    var5 = var2;
                    goto label_0460;
                } else if (var0 - 0x0fff) {
                    var temp0 = memory[0x40:0x60];
                    memory[temp0:temp0 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                    memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;
                    memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x13;
                    memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x66616c6c6261636b20666c6167206572726f7200000000000000000000000000;
                    var var1 = temp0 + 0x64;
                
                label_0161:
                    var temp1 = memory[0x40:0x60];
                    revert(memory[temp1:temp1 + var1 - temp1]);
                } else {
                    var1 = 0x00;
                    var var2 = var1;
                    var var3 = 0x01ec;
                    var var4;
                    var3, var4 = func_0663();
                    var temp2 = var4;
                    var2 = temp2;
                    var temp3 = var3;
                    var1 = temp3;
                    var3 = 0x01d6;
                    var4 = var1;
                    var var5 = var2;
                
                label_0460:
                    var var6 = 0x00;
                    var var7 = var6;
                    var var8 = 0x00;
                    var var9 = var8;
                    var var10 = 0x00;
                    var var11 = var10;
                    var var12 = 0x00;
                    var var13 = var12;
                    var temp4 = var5;
                    var var14 = 0x0480;
                    var var15 = temp4 + 0x20 + memory[temp4:temp4 + 0x20];
                    var var16 = temp4 + 0x20;
                    var var17;
                    var var18;
                    var var19;
                    var var20;
                    var var21;
                    var14, var15, var16, var17, var18, var19, var20, var21 = func_5057(var15, var16);
                    var13 = var21;
                    var12 = var20;
                    var11 = var19;
                    var10 = var18;
                    var9 = var17;
                    var8 = var16;
                    var7 = var15;
                    var6 = var14;
                
                    if (0x00 - var6) {
                        var14 = 0x05a0;
                        var15 = var12;
                        var16 = var13;
                        var17 = var4;
                        func_105C(var15, var16, var17);
                        var14 = 0x05b8;
                        var15 = var8;
                        var16 = var9;
                        var17 = var13;
                        var18 = 0x00;
                    
                        if (var18 < memory[var17:var17 + 0x20]) {
                            var17 = memory[memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20]:memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20] + 0x20];
                            var18 = var12;
                            var19 = 0x00;
                        
                            if (var19 < memory[var18:var18 + 0x20]) {
                                var18 = memory[memory[var19 * 0x20 + 0x20 + var18:var19 * 0x20 + 0x20 + var18 + 0x20] + 0x20:memory[var19 * 0x20 + 0x20 + var18:var19 * 0x20 + 0x20 + var18 + 0x20] + 0x20 + 0x20];
                                var19 = var11;
                                var20 = var12;
                                var21 = var13;
                                var var22 = 0x00;
                                var var23 = var20;
                                var var24 = 0x00;
                            
                                if (var24 < memory[var23:var23 + 0x20]) {
                                    var22 = memory[memory[var24 * 0x20 + 0x20 + var23:var24 * 0x20 + 0x20 + var23 + 0x20] + 0x80:memory[var24 * 0x20 + 0x20 + var23:var24 * 0x20 + 0x20 + var23 + 0x20] + 0x80 + 0x20];
                                    var23 = 0x01;
                                    var24 = 0x0d91;
                                    var var26 = memory[var20:var20 + 0x20];
                                    var var25 = 0x01;
                                    var24 = func_5272(var25, var26);
                                
                                    if (var23 < var24) {
                                        var24 = 0x0e3b;
                                        var25 = var17;
                                        var26 = var21;
                                        var27 = var23;
                                    
                                        if (var27 < memory[var26:var26 + 0x20]) {
                                            var26 = memory[memory[var27 * 0x20 + 0x20 + var26:var27 * 0x20 + 0x20 + var26 + 0x20]:memory[var27 * 0x20 + 0x20 + var26:var27 * 0x20 + 0x20 + var26 + 0x20] + 0x20];
                                            var27 = var18;
                                            var28 = var22;
                                            var29 = var20;
                                            var30 = var23;
                                        
                                            if (var30 < memory[var29:var29 + 0x20]) {
                                                var29 = memory[var30 * 0x20 + 0x20 + var29:var30 * 0x20 + 0x20 + var29 + 0x20];
                                                var30 = var21;
                                                var31 = 0x0de4;
                                                var33 = 0x01;
                                                var32 = var23;
                                                var31 = func_5289(var32, var33);
                                            
                                                if (var31 >= memory[var30:var30 + 0x20]) {
                                                    var32 = 0x0df4;
                                                    goto label_51DC;
                                                } else if (memory[memory[var31 * 0x20 + 0x20 + var30:var31 * 0x20 + 0x20 + var30 + 0x20] + 0x20:memory[var31 * 0x20 + 0x20 + var30:var31 * 0x20 + 0x20 + var30 + 0x20] + 0x20 + 0x20]) {
                                                    var30 = var20;
                                                    var31 = 0x0e16;
                                                    var32 = var23;
                                                    var33 = 0x01;
                                                    var31 = func_5289(var32, var33);
                                                
                                                    if (var31 < memory[var30:var30 + 0x20]) {
                                                        var30 = memory[memory[var31 * 0x20 + 0x20 + var30:var31 * 0x20 + 0x20 + var30 + 0x20]:memory[var31 * 0x20 + 0x20 + var30:var31 * 0x20 + 0x20 + var30 + 0x20] + 0x20];
                                                    
                                                    label_0E33:
                                                        var31 = var19;
                                                        var32 = 0x01;
                                                        goto label_0D3F;
                                                    } else {
                                                        var32 = 0x0e26;
                                                        goto label_51DC;
                                                    }
                                                } else {
                                                    var30 = address(this);
                                                    goto label_0E33;
                                                }
                                            } else {
                                                var31 = 0x0dce;
                                                goto label_51DC;
                                            }
                                        } else {
                                            var28 = 0x0dae;
                                            goto label_51DC;
                                        }
                                    } else if (var15 - 0x0a) {
                                        var23 = 0x00;
                                        var24 = var20;
                                        var25 = 0x0f2e;
                                        var var27 = memory[var24:var24 + 0x20];
                                        var26 = 0x01;
                                        var25 = func_5272(var26, var27);
                                    
                                        if (var25 < memory[var24:var24 + 0x20]) {
                                            var temp5 = memory[memory[var25 * 0x20 + 0x20 + var24:var25 * 0x20 + 0x20 + var24 + 0x20] + 0x20:memory[var25 * 0x20 + 0x20 + var24:var25 * 0x20 + 0x20 + var24 + 0x20] + 0x20 + 0x20];
                                            var23 = temp5;
                                            var24 = 0x00;
                                            var25 = 0x0f57;
                                            var26 = var23;
                                            var25 = func_2B7C(var26);
                                            var24 = var25;
                                            var25 = 0x0fba;
                                            var26 = var17;
                                            var27 = var21;
                                            var var28 = 0x0f6c;
                                            var var29 = 0x01;
                                            var var30 = memory[var20:var20 + 0x20];
                                            var28 = func_5272(var29, var30);
                                        
                                            if (var28 < memory[var27:var27 + 0x20]) {
                                                var27 = memory[memory[var28 * 0x20 + 0x20 + var27:var28 * 0x20 + 0x20 + var27 + 0x20]:memory[var28 * 0x20 + 0x20 + var27:var28 * 0x20 + 0x20 + var27 + 0x20] + 0x20];
                                                var28 = var18;
                                                var29 = var22;
                                                var30 = var20;
                                                var var31 = 0x0f99;
                                                var var32 = 0x01;
                                                var var33 = memory[var30:var30 + 0x20];
                                                var31 = func_5272(var32, var33);
                                            
                                                if (var31 < memory[var30:var30 + 0x20]) {
                                                    var30 = memory[var31 * 0x20 + 0x20 + var30:var31 * 0x20 + 0x20 + var30 + 0x20];
                                                    var31 = address(this);
                                                    var32 = var19;
                                                    var33 = 0x02;
                                                
                                                label_0D3F:
                                                    var var34 = 0x0d4f;
                                                    var var35 = var26;
                                                    var var36 = var27;
                                                    var var37 = var28;
                                                    var var38 = var29;
                                                    var var39 = var30;
                                                    var var40 = var31;
                                                    var var41 = var32;
                                                    var var42 = var33;
                                                    func_1D92(var35, var36, var37, var38, var39, var40, var41, var42);
                                                
                                                label_0D4F:
                                                    // Error: Could not resolve jump destination!
                                                } else {
                                                    var32 = 0x0fa9;
                                                
                                                label_51DC:
                                                    memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                                                    memory[0x04:0x24] = 0x32;
                                                    revert(memory[0x00:0x24]);
                                                }
                                            } else {
                                                var29 = 0x0f7c;
                                                goto label_51DC;
                                            }
                                        } else {
                                            var26 = 0x0f3e;
                                            goto label_51DC;
                                        }
                                    } else {
                                        var23 = 0x0f18;
                                        var24 = var17;
                                        var25 = var21;
                                        var26 = 0x0eca;
                                        var28 = memory[var20:var20 + 0x20];
                                        var27 = 0x01;
                                        var26 = func_5272(var27, var28);
                                    
                                        if (var26 < memory[var25:var25 + 0x20]) {
                                            var25 = memory[memory[var26 * 0x20 + 0x20 + var25:var26 * 0x20 + 0x20 + var25 + 0x20]:memory[var26 * 0x20 + 0x20 + var25:var26 * 0x20 + 0x20 + var25 + 0x20] + 0x20];
                                            var26 = var18;
                                            var27 = var22;
                                            var28 = var20;
                                            var29 = 0x0ef7;
                                            var30 = 0x01;
                                            var31 = memory[var28:var28 + 0x20];
                                            var29 = func_5272(var30, var31);
                                        
                                            if (var29 < memory[var28:var28 + 0x20]) {
                                                var28 = memory[var29 * 0x20 + 0x20 + var28:var29 * 0x20 + 0x20 + var28 + 0x20];
                                                var29 = address(this);
                                                var30 = var19;
                                                var31 = 0x02;
                                                goto label_0D3F;
                                            } else {
                                                var30 = 0x0f07;
                                                goto label_51DC;
                                            }
                                        } else {
                                            var27 = 0x0eda;
                                            goto label_51DC;
                                        }
                                    }
                                } else {
                                    var25 = 0x0d6e;
                                    goto label_51DC;
                                }
                            } else {
                                var20 = 0x057c;
                                goto label_51DC;
                            }
                        } else {
                            var19 = 0x055d;
                            goto label_51DC;
                        }
                    } else {
                        var14 = 0x0545;
                        var15 = var4;
                        var16 = var13;
                        var17 = 0x00;
                    
                        if (var17 < memory[var16:var16 + 0x20]) {
                            var16 = memory[memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20]:memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20] + 0x20];
                            var17 = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
                            var18 = 0x2710;
                            var19 = var12;
                            var20 = 0x00;
                        
                            if (var20 < memory[var19:var19 + 0x20]) {
                                var19 = memory[var20 * 0x20 + 0x20 + var19:var20 * 0x20 + 0x20 + var19 + 0x20];
                                var20 = var13;
                                var21 = 0x01;
                            
                                if (var21 >= memory[var20:var20 + 0x20]) {
                                    var22 = 0x0507;
                                    goto label_51DC;
                                } else if (memory[memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20] + 0x20:memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20] + 0x20 + 0x20]) {
                                    var20 = var12;
                                    var21 = 0x01;
                                
                                    if (var21 < memory[var20:var20 + 0x20]) {
                                        var20 = memory[memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20]:memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20] + 0x20];
                                        var21 = 0x00;
                                        var22 = var21;
                                        goto label_0D3F;
                                    } else {
                                        var22 = 0x0530;
                                        goto label_51DC;
                                    }
                                } else {
                                    var20 = address(this);
                                    var21 = 0x00;
                                    var22 = var21;
                                    goto label_0D3F;
                                }
                            } else {
                                var21 = 0x04ec;
                                goto label_51DC;
                            }
                        } else {
                            var18 = 0x04af;
                            goto label_51DC;
                        }
                    }
                }
            } else {
                var temp6 = memory[0x40:0x60];
                memory[temp6:temp6 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = 0x20;
                memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = 0x0a;
                memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = 0x6f6e6c7920656e74727900000000000000000000000000000000000000000000;
                var temp7 = memory[0x40:0x60];
                revert(memory[temp7:temp7 + (temp6 + 0x64) - temp7]);
            }
        } else { stop(); }
    }
    
    function func_02B7(var arg0) returns (var arg0) {
        var var0 = 0x02;
        var var1 = arg0;
    
        if (var1 < 0x0a) { return storage[var1 + var0]; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_02EA(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8) {
        memory[0x00:0x20] = msg.sender;
        memory[0x20:0x40] = 0x00;
    
        if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
    
        var var0 = 0x0808;
        var var1 = arg0;
        var var2 = arg1;
        var var3 = arg2;
        var var4 = arg3;
        var var5 = arg4;
        var var6 = arg5;
        var var7 = arg6;
        var var8 = arg7;
        var var9 = arg8;
        var var10 = 0x00;
        func_13AC(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
    }
    
    function func_030A(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8, var arg9, var arg10) returns (var r0) {
        var var0 = 0x00;
        memory[var0:var0 + 0x20] = msg.sender;
        memory[0x20:0x40] = var0;
    
        if (!(storage[keccak256(memory[var0:var0 + 0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
    
        var var1 = 0x08b6;
        var var2 = arg0;
        var var3 = arg1;
        var var4 = arg2;
        var temp0 = arg4;
        var temp1 = memory[0x40:0x60];
        memory[0x40:0x60] = temp1 + temp0 * 0x20 + 0x20;
        var var5 = temp1;
        memory[var5:var5 + 0x20] = temp0;
        var temp2 = var5 + 0x20;
        var temp3 = temp0 * 0x20;
        memory[temp2:temp2 + temp3] = msg.data[arg3:arg3 + temp3];
        memory[temp2 + temp3:temp2 + temp3 + 0x20] = 0x00;
        var temp4 = arg6;
        var temp5 = memory[0x40:0x60];
        memory[0x40:0x60] = temp5 + temp4 * 0x20 + 0x20;
        var var6 = temp5;
        memory[var6:var6 + 0x20] = temp4;
        var temp6 = var6 + 0x20;
        var temp7 = temp4 * 0x20;
        memory[temp6:temp6 + temp7] = msg.data[arg5:arg5 + temp7];
        memory[temp6 + temp7:temp6 + temp7 + 0x20] = 0x00;
        var var7 = arg7;
        var var8 = arg8;
        var var9 = arg9;
        var var10 = arg10;
        var var11 = 0x00;
        return func_1607(var2, var3, var4, var5, var6, var7, var8, var9, var10, var11);
    }
    
    function func_032A(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8) {
        memory[0x00:0x20] = msg.sender;
        memory[0x20:0x40] = 0x00;
    
        if (!(storage[keccak256(memory[0x00:0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
    
        var var0 = 0x0808;
        var var1 = arg0;
        var var2 = arg1;
        var var3 = arg2;
        var var4 = arg3;
        var var5 = arg4;
        var var6 = arg5;
        var var7 = arg6;
        var var8 = arg7;
        var var9 = arg8;
        var var10 = 0x01;
        func_13AC(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
    }
    
    function func_034A(var arg0, var arg1) {
        if (msg.sender != 0x0000000000000000000000003f2007cdef657719c65ec77e71b7487d16f0fa00 & 0xffffffffffffffffffffffffffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;
        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = msg.sender;
        memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = arg1;
        var var0 = arg0 & 0xffffffffffffffffffffffffffffffffffffffff;
        var var1 = 0xa9059cbb;
        var var2 = temp0 + 0x44;
        var var3 = 0x00;
        var var4 = memory[0x40:0x60];
        var var5 = var2 - var4;
        var var6 = var4;
        var var7 = 0x00;
        var var8 = var0;
        var var9 = !address(var8).code.length;
    
        if (var9) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var4:var4 + var3] = address(var8).call.gas(msg.gas).value(var7)(memory[var6:var6 + var5]);
        var3 = !temp1;
    
        if (!var3) { return; }
    
        var temp2 = returndata.length;
        memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
        revert(memory[0x00:0x00 + returndata.length]);
    }
    
    function func_036A(var arg0) {
        if (msg.sender != 0x0000000000000000000000003f2007cdef657719c65ec77e71b7487d16f0fa00 & 0xffffffffffffffffffffffffffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var var0 = memory[arg0:arg0 + 0x20];
        var var1 = 0x00;
    
        if (var1 >= var0) {
        label_0A96:
            return;
        } else {
        label_0A11:
            var var2 = 0x01;
            var var3 = 0x00;
            var var4 = var3;
            var var5 = arg0;
            var var6 = var1;
        
            if (var6 < memory[var5:var5 + 0x20]) {
                var temp0 = var4;
                memory[temp0:temp0 + 0x20] = memory[var6 * 0x20 + var5 + 0x20:var6 * 0x20 + var5 + 0x20 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = var3;
                var temp1 = keccak256(memory[0x00:0x00 + temp0 + 0x40]);
                storage[temp1] = !!var2 | (storage[temp1] & 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00);
                var2 = var1;
                var3 = 0x0a8e;
                var4 = var2;
                var3 = func_523A(var4);
                var1 = var3;
            
                if (var1 >= var0) { goto label_0A96; }
                else { goto label_0A11; }
            } else {
                var var7 = 0x0a27;
                memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                memory[0x04:0x24] = 0x32;
                revert(memory[0x00:0x24]);
            }
        }
    }
    
    function func_038A(var arg0) {
        if (msg.sender != 0x0000000000000000000000003f2007cdef657719c65ec77e71b7487d16f0fa00 & 0xffffffffffffffffffffffffffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = memory[0x40:0x60];
        var var0 = 0x00;
        var temp1;
        temp1, memory[temp0:temp0 + var0] = address(msg.sender).call.gas(msg.gas).value(arg0)(memory[temp0:temp0 + var0]);
        var var2 = returndata.length;
        var var3 = var2;
    
        if (var3 == 0x00) {
            // Error: StackRead before write???
            var var1;
            var0 = var1;
        
            if (!var0) { revert(memory[0x00:0x00]); }
        
        label_0B32:
            return;
        } else {
            var temp2 = memory[0x40:0x60];
            var2 = temp2;
            memory[0x40:0x60] = var2 + (returndata.length + 0x3f & ~0x1f);
            memory[var2:var2 + 0x20] = returndata.length;
            var temp3 = returndata.length;
            memory[var2 + 0x20:var2 + 0x20 + temp3] = returndata[0x00:0x00 + temp3];
            var0 = var1;
        
            if (var0) { goto label_0B32; }
            else { revert(memory[0x00:0x00]); }
        }
    }
    
    function func_03AA(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6) returns (var r0) {
        var var0 = 0x00;
        memory[var0:var0 + 0x20] = msg.sender;
        memory[0x20:0x40] = var0;
    
        if (!(storage[keccak256(memory[var0:var0 + 0x40])] & 0xff)) { revert(memory[0x00:0x00]); }
    
        var var1 = 0x0b9e;
        var var2 = arg0;
        var var3 = arg1;
        var var4 = arg2;
        var temp0 = memory[0x40:0x60];
        var var5 = temp0;
        var var6 = 0x00;
        memory[var5:var5 + 0x20] = var6;
        memory[0x40:0x60] = var5 + var6 * 0x20 + 0x20;
    
        if (var6) { return func_0B74(arg3, arg4, arg5, arg6, var2, var3, var4, var5, var6); }
    
        var temp1 = memory[0x40:0x60];
        memory[temp1:temp1 + 0x20] = 0x00;
        var6 = temp1;
        memory[0x40:0x60] = var6 + 0x20;
        var var7 = arg3;
        var var8 = arg4;
        var var9 = arg5;
        var var10 = arg6;
        var var11 = 0x01;
        var1 = func_1607(var2, var3, var4, var5, var6, var7, var8, var9, var10, var11);
        // Error: Could not resolve method call return address!
    }
    
    function func_0448() returns (var r0, var r1, var r2) {
        r1 = 0x00;
        r2 = r1;
        var var2 = 0x60;
        var var3 = 0x0455;
        var var4;
        var var5;
        var3, var4, var5 = func_0CD2();
        r2 = var5;
        r1 = var4;
        r0 = var3;
        return r0, r1, r2;
    }
    
    function func_0663() returns (var r0, var r1) {
        r1 = 0x00;
        var var1 = 0x60;
        var var2 = 0x00;
        var var3 = var2;
        var var4 = 0x00;
        var var5 = 0x0674;
        var var6;
        var var7;
        var5, var6, var7 = func_11EB();
        var4 = var7;
        var3 = var6;
        var2 = var5;
    
        if (var2 > 0x00) {
            r0 = var2;
            r1 = var4;
            return r0, r1;
        } else {
            var5 = var3;
            r0 = var5;
            r1 = var4;
            return r0, r1;
        }
    }
    
    function func_0B74(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8) returns (var r0) {
        var temp0 = arg8 * 0x20;
        memory[arg7 + 0x20:arg7 + 0x20 + temp0] = msg.data[msg.data.length:msg.data.length + temp0];
        var temp1 = memory[0x40:0x60];
        memory[temp1:temp1 + 0x20] = 0x00;
        arg8 = temp1;
        memory[0x40:0x60] = arg8 + 0x20;
        var var0 = arg0;
        var var1 = arg1;
        var var2 = arg2;
        var var3 = arg3;
        var var4 = 0x01;
        r0 = func_1607(arg4, arg5, arg6, arg7, arg8, var0, var1, var2, var3, var4);
        // Error: Could not resolve method call return address!
    }
    
    function func_0CD2() returns (var r0, var r1, var r2) {
        r1 = 0x00;
        r2 = r1;
        var var2 = 0x60;
        var var3 = 0x00;
        var var4 = var3;
        var var5 = 0x60;
    
        if (msg.data.length <= 0x64) {
            var var6 = 0x0d31;
            var var7 = var3;
            var var8 = var4;
            var var9 = var5;
            var6, var7, var8 = func_1C33(var7, var8, var9);
        
        label_0D31:
            r2 = var8;
            r1 = var7;
            r0 = var6;
            return r0, r1, r2;
        } else {
            var temp0 = memory[0x40:0x60];
            var5 = temp0;
            var temp1 = msg.data.length;
            memory[0x40:0x60] = var5 + temp1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c;
            var3 = msg.data[0x04:0x24];
            var4 = msg.data[0x24:0x44];
            var temp2 = temp1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c;
            memory[var5:var5 + temp2] = msg.data[0x64:0x64 + temp2];
            var6 = 0x0d31;
            var7 = var3;
            var8 = var4;
            var9 = var5;
            var6, var7, var8 = func_1C33(var7, var8, var9);
            goto label_0D31;
        }
    }
    
    function func_105C(var arg0, var arg1, var arg2) {
        var var0 = arg0;
        var var1 = 0x00;
    
        if (var1 < memory[var0:var0 + 0x20]) {
            var0 = memory[memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40:memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40 + 0x20] & 0xffff == 0x00;
        
            if (var0) {
            label_10AF:
            
                if (var0) {
                label_10DC:
                
                    if (!var0) {
                    label_1103:
                    
                        if (!var0) { return; }
                    
                        var0 = arg0;
                        var1 = 0x00;
                    
                        if (var1 < memory[var0:var0 + 0x20]) {
                            var0 = memory[memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x20:memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x20 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
                            var1 = 0xa9059cbb;
                            var var2 = arg0;
                            var var3 = 0x01;
                        
                            if (var3 < memory[var2:var2 + 0x20]) {
                                var temp0 = memory[memory[var3 * 0x20 + var2 + 0x20:var3 * 0x20 + var2 + 0x20 + 0x20]:memory[var3 * 0x20 + var2 + 0x20:var3 * 0x20 + var2 + 0x20 + 0x20] + 0x20];
                                var temp1 = memory[0x40:0x60];
                                memory[temp1:temp1 + 0x20] = (var1 << 0xe0) & 0xffffffff00000000000000000000000000000000000000000000000000000000;
                                memory[temp1 + 0x04:temp1 + 0x04 + 0x20] = temp0 & 0xffffffffffffffffffffffffffffffffffffffff;
                                memory[temp1 + 0x24:temp1 + 0x24 + 0x20] = arg2;
                                var2 = temp1 + 0x44;
                                var3 = 0x00;
                                var var4 = memory[0x40:0x60];
                                var var5 = var2 - var4;
                                var var6 = var4;
                                var var7 = 0x00;
                                var var8 = var0;
                                var var9 = !address(var8).code.length;
                            
                                if (var9) { revert(memory[0x00:0x00]); }
                            
                                var temp2;
                                temp2, memory[var4:var4 + var3] = address(var8).call.gas(msg.gas).value(var7)(memory[var6:var6 + var5]);
                                var3 = !temp2;
                            
                                if (!var3) { return; }
                            
                                var temp3 = returndata.length;
                                memory[0x00:0x00 + temp3] = returndata[0x00:0x00 + temp3];
                                revert(memory[0x00:0x00 + returndata.length]);
                            } else {
                                var4 = 0x1155;
                            
                            label_51DC:
                                memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                                memory[0x04:0x24] = 0x32;
                                revert(memory[0x00:0x24]);
                            }
                        } else {
                            var2 = 0x111b;
                            goto label_51DC;
                        }
                    } else {
                        var0 = arg1;
                        var1 = 0x01;
                    
                        if (var1 < memory[var0:var0 + 0x20]) {
                            var0 = memory[memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x20:memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x20 + 0x20];
                            goto label_1103;
                        } else {
                            var2 = 0x10f6;
                            goto label_51DC;
                        }
                    }
                } else {
                    var0 = arg0;
                    var1 = 0x00;
                
                    if (var1 < memory[var0:var0 + 0x20]) {
                        var0 = memory[memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40:memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40 + 0x20] & 0xffff == 0x0f;
                        goto label_10DC;
                    } else {
                        var2 = 0x10c8;
                        goto label_51DC;
                    }
                }
            } else {
                var0 = arg0;
                var1 = 0x00;
            
                if (var1 < memory[var0:var0 + 0x20]) {
                    var0 = memory[memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40:memory[var1 * 0x20 + 0x20 + var0:var1 * 0x20 + 0x20 + var0 + 0x20] + 0x40 + 0x20] & 0xffff == 0x35;
                    goto label_10AF;
                } else {
                    var2 = 0x109b;
                    goto label_51DC;
                }
            }
        } else {
            var2 = 0x106f;
            goto label_51DC;
        }
    }
    
    function func_11EB() returns (var r0, var r1, var r2) {
        r1 = 0x00;
        r2 = r1;
        var var2 = 0x60;
        var var3 = 0x00;
    
        if (msg.data.length <= 0x84) {
            var var4 = address(this) == var3 & 0xffffffffffffffffffffffffffffffffffffffff;
        
            if (!var4) {
            label_1268:
            
                if (var4) {
                    var temp0 = r2;
                    r2 = var2;
                    var temp1 = r1;
                    r1 = temp0;
                    r0 = temp1;
                    return r0, r1, r2;
                } else {
                    var temp2 = memory[0x40:0x60];
                    memory[temp2:temp2 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                    memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = 0x20;
                    memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = 0x0c;
                    memory[temp2 + 0x44:temp2 + 0x44 + 0x20] = 0x696e76616c69642063616c6c0000000000000000000000000000000000000000;
                    var4 = temp2 + 0x64;
                    var temp3 = memory[0x40:0x60];
                    revert(memory[temp3:temp3 + var4 - temp3]);
                }
            } else {
            label_1246:
                var4 = !r1;
            
                if (var4) {
                    var4 = r2 > 0x00;
                
                    if (var4) { goto label_1268; }
                    else { goto label_125A; }
                } else if (var4) { goto label_1268; }
                else {
                label_125A:
                    var4 = r1 > 0x00;
                
                    if (!var4) { goto label_1268; }
                
                    var4 = !r2;
                    goto label_1268;
                }
            }
        } else {
            var3 = msg.data[0x04:0x24];
            r1 = msg.data[0x24:0x44];
            r2 = msg.data[0x44:0x64];
            var temp4 = memory[0x40:0x60];
            var2 = temp4;
            var temp5 = msg.data.length - 0x84 - 0x20;
            memory[0x40:0x60] = var2 + temp5;
            memory[var2:var2 + temp5] = msg.data[0x84:0x84 + temp5];
            var4 = address(this) == var3 & 0xffffffffffffffffffffffffffffffffffffffff;
        
            if (!var4) { goto label_1268; }
            else { goto label_1246; }
        }
    }
    
    function func_12D4(var arg0, var arg1, var arg2, var arg3) {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0x1878068400000000000000000000000000000000000000000000000000000000;
        var var0 = 0x85dfbd2d289f545f3dd6d58db6b71ae032f019f8;
        var var1 = 0x18780684;
        var var2 = 0x132a;
        var var3 = arg0;
        var var4 = arg1;
        var var5 = arg2;
        var var6 = arg3;
        var var7 = temp0 + 0x04;
        var2 = func_52EA(var3, var4, var5, var6, var7);
        var3 = 0x00;
        var4 = memory[0x40:0x60];
        var5 = var2 - var4;
        var6 = var4;
        var7 = var0;
        var var8 = !address(var7).code.length;
    
        if (var8) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
        var3 = !temp1;
    
        if (!var3) { return; }
    
        var temp2 = returndata.length;
        memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
        revert(memory[0x00:0x00 + returndata.length]);
    }
    
    function func_1356(var arg0, var arg1, var arg2, var arg3) {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0x2c8958f600000000000000000000000000000000000000000000000000000000;
        var var0 = 0x75477373702bc8cc710ea4ba88e05e71daab0f05;
        var var1 = 0x2c8958f6;
        var var2 = 0x132a;
        var var3 = arg0;
        var var4 = arg1;
        var var5 = arg2;
        var var6 = arg3;
        var var7 = temp0 + 0x04;
        var2 = func_52EA(var3, var4, var5, var6, var7);
        var3 = 0x00;
        var4 = memory[0x40:0x60];
        var5 = var2 - var4;
        var6 = var4;
        var7 = var0;
        var var8 = !address(var7).code.length;
    
        if (var8) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
        var3 = !temp1;
    
        if (!var3) { return; }
    
        var temp2 = returndata.length;
        memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
        revert(memory[0x00:0x00 + returndata.length]);
    }
    
    function func_13AC(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8, var arg9) {
        var var0 = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
        var var1 = 0x00;
        var var2 = 0x13cc;
        var var3 = var0;
        var2 = func_2B7C(var3);
        storage[0x01] = var2;
        var1 = var2;
    
        if (arg2 < 0x0a) {
            storage[0x0d] = 0x02;
            var2 = 0x00;
            var3 = var2;
        
            if (var3 >= arg2) {
            label_1486:
                var3 = var2 > var1;
            
                if (!var3) {
                    if (!var3) {
                    label_1545:
                        var3 = 0x00;
                    
                        if (var3 >= arg2) {
                        label_15EE:
                            storage[0x0d] = 0x01;
                            storage[0x0c] = arg0;
                            return;
                        } else {
                            var var4 = 0x15da;
                            var var5 = var3;
                            var var6 = arg3;
                            var var7 = arg4;
                            var var8 = var5;
                        
                            if (var8 < var7) {
                                var6 = msg.data[var8 * 0x20 + var6:var8 * 0x20 + var6 + 0x20];
                                var7 = arg1;
                                var8 = arg2;
                                var var9 = var3;
                            
                                if (var9 < var8) {
                                    var7 = msg.data[var9 * 0x20 + var7:var9 * 0x20 + var7 + 0x20];
                                    var8 = 0x2710;
                                    var9 = var0;
                                    var var10 = arg5;
                                    var var11 = arg6;
                                    var var12 = var3;
                                
                                    if (var12 < var11) {
                                        var temp0 = var12 * 0x20 + var10;
                                        var temp1 = temp0 + 0x20;
                                        var10 = 0x15b1;
                                        var12 = temp0;
                                        var11 = temp1;
                                        var10 = func_5314(var11, var12);
                                        var11 = arg7;
                                        var12 = arg8;
                                        var var13 = var3;
                                    
                                        if (var13 < var12) {
                                            var temp2 = var11;
                                            var temp3 = temp2 + var13 * 0x20;
                                            var11 = 0x15d5;
                                            var13 = temp2;
                                            var12 = temp3;
                                            var11, var12 = func_5338(var12, var13);
                                            var13 = 0x00;
                                            var var14 = 0x2dda;
                                            var var15 = var7;
                                            var var16 = var8;
                                            var var17 = var9;
                                            var var18 = var11;
                                            var var19 = var12;
                                            var14 = func_301B(var15, var16, var17, var18, var19);
                                            var13 = var14;
                                        
                                            if (0x01 - var12) {
                                                var14 = 0x2f36;
                                                var15 = var7;
                                                var16 = var13;
                                                var17 = 0x00;
                                            
                                                if (var17 < memory[var16:var16 + 0x20]) {
                                                    var16 = memory[memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20]:memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20] + 0x20];
                                                    var17 = var9;
                                                    var18 = 0x2710;
                                                    var19 = var11;
                                                    var var20 = var12;
                                                    var var21 = 0x00;
                                                
                                                    if (var21 < var20) {
                                                        var temp4 = var21 * 0xa0 + var19;
                                                        var19 = 0x2ee4;
                                                        var21 = temp4;
                                                        var20 = var21 + (msg.data.length - var21);
                                                        var19 = func_56B3(var20, var21);
                                                        var20 = var13;
                                                        var21 = 0x01;
                                                    
                                                        if (var21 >= memory[var20:var20 + 0x20]) {
                                                            var22 = 0x2ef7;
                                                            goto label_51DC;
                                                        } else if (memory[memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20] + 0x20:memory[var21 * 0x20 + 0x20 + var20:var21 * 0x20 + 0x20 + var20 + 0x20] + 0x20 + 0x20]) {
                                                            var20 = var11;
                                                            var21 = var12;
                                                            var var22 = 0x01;
                                                        
                                                            if (var22 < var21) {
                                                                var temp5 = var20;
                                                                var20 = 0x053d;
                                                                var temp6 = var22 * 0xa0 + temp5;
                                                                var22 = temp6;
                                                                var21 = var22 + 0x20;
                                                                var var23 = 0x00;
                                                            
                                                                if (var21 - var22 i< 0x20) { revert(memory[0x00:0x00]); }
                                                            
                                                                var var24 = msg.data[var22:var22 + 0x20];
                                                                var var25 = 0x5331;
                                                                var var26 = var24;
                                                                func_4D2B(var26);
                                                            
                                                            label_5331:
                                                                var20 = var24;
                                                                // Error: Could not resolve jump destination!
                                                            } else {
                                                                var23 = 0x2f20;
                                                            
                                                            label_51DC:
                                                                memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                                                                memory[0x04:0x24] = 0x32;
                                                                revert(memory[0x00:0x24]);
                                                            }
                                                        } else {
                                                            var20 = address(this);
                                                            var21 = 0x00;
                                                            var22 = var21;
                                                        
                                                        label_0D3F:
                                                            var23 = 0x0d4f;
                                                            var24 = var15;
                                                            var25 = var16;
                                                            var26 = var17;
                                                            var var27 = var18;
                                                            var var28 = var19;
                                                            var var29 = var20;
                                                            var var30 = var21;
                                                            var var31 = var22;
                                                            func_1D92(var24, var25, var26, var27, var28, var29, var30, var31);
                                                        
                                                        label_0D4F:
                                                            // Error: Could not resolve jump destination!
                                                        }
                                                    } else {
                                                        var22 = 0x2ece;
                                                        goto label_51DC;
                                                    }
                                                } else {
                                                    var18 = 0x2eab;
                                                    goto label_51DC;
                                                }
                                            } else {
                                                var14 = 0x2e3e;
                                                var15 = var7;
                                                var16 = var13;
                                                var17 = 0x00;
                                            
                                                if (var17 < memory[var16:var16 + 0x20]) {
                                                    var16 = memory[memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20]:memory[var17 * 0x20 + 0x20 + var16:var17 * 0x20 + 0x20 + var16 + 0x20] + 0x20];
                                                    var17 = var9;
                                                    var18 = 0x2710;
                                                    var19 = var11;
                                                    var20 = var12;
                                                    var21 = 0x00;
                                                
                                                    if (var21 < var20) {
                                                        var temp7 = var21 * 0xa0 + var19;
                                                        var19 = 0x2e35;
                                                        var21 = temp7;
                                                        var20 = var21 + (msg.data.length - var21);
                                                        var19 = func_56B3(var20, var21);
                                                        var20 = address(this);
                                                        var21 = 0x00;
                                                        var22 = var21;
                                                        goto label_0D3F;
                                                    } else {
                                                        var22 = 0x2e1f;
                                                        goto label_51DC;
                                                    }
                                                } else {
                                                    var18 = 0x2dfc;
                                                    goto label_51DC;
                                                }
                                            }
                                        } else {
                                            var14 = 0x15c3;
                                            goto label_51DC;
                                        }
                                    } else {
                                        var13 = 0x159c;
                                        goto label_51DC;
                                    }
                                } else {
                                    var10 = 0x157f;
                                    goto label_51DC;
                                }
                            } else {
                                var9 = 0x1566;
                                goto label_51DC;
                            }
                        }
                    } else {
                    label_1499:
                        var3 = 0x00;
                    
                        if (var3 >= arg2) { goto label_15EE; }
                    
                        var4 = 0x152d;
                        var5 = var3;
                        var6 = arg3;
                        var7 = arg4;
                        var8 = var5;
                    
                        if (var8 < var7) {
                            var6 = msg.data[var8 * 0x20 + var6:var8 * 0x20 + var6 + 0x20];
                            var7 = arg1;
                            var8 = arg2;
                            var9 = var3;
                        
                            if (var9 < var8) {
                                var7 = msg.data[var9 * 0x20 + var7:var9 * 0x20 + var7 + 0x20];
                                var8 = 0x2710;
                                var9 = var0;
                                var10 = arg5;
                                var11 = arg6;
                                var12 = var3;
                            
                                if (var12 < var11) {
                                    var temp8 = var12 * 0x20 + var10;
                                    var temp9 = temp8 + 0x20;
                                    var10 = 0x1504;
                                    var12 = temp8;
                                    var11 = temp9;
                                    var10 = func_5314(var11, var12);
                                    var11 = arg7;
                                    var12 = arg8;
                                    var13 = var3;
                                
                                    if (var13 < var12) {
                                        var temp10 = var11;
                                        var temp11 = temp10 + var13 * 0x20;
                                        var11 = 0x1528;
                                        var13 = temp10;
                                        var12 = temp11;
                                        var11, var12 = func_5338(var12, var13);
                                        var13 = 0x00;
                                        var14 = 0x2c22;
                                        var15 = var7;
                                        var16 = var8;
                                        var17 = var9;
                                        var18 = var11;
                                        var19 = var12;
                                        var14 = func_301B(var15, var16, var17, var18, var19);
                                        var13 = var14;
                                        var14 = var11;
                                        var15 = var12;
                                        var16 = 0x00;
                                    
                                        if (var16 < var15) {
                                            var temp12 = var16 * 0xa0 + var14 + 0x40;
                                            var temp13 = temp12 + 0x20;
                                            var14 = 0x2c4f;
                                            var15 = temp13;
                                            var16 = temp12;
                                            var17 = 0x00;
                                        
                                            if (var15 - var16 i< 0x20) { revert(memory[0x00:0x00]); }
                                        
                                            var18 = msg.data[var16:var16 + 0x20];
                                            var19 = 0x5331;
                                            var20 = var18;
                                            func_4FB4(var20);
                                            goto label_5331;
                                        } else {
                                            var17 = 0x2c37;
                                            goto label_51DC;
                                        }
                                    } else {
                                        var14 = 0x1516;
                                        goto label_51DC;
                                    }
                                } else {
                                    var13 = 0x14ef;
                                    goto label_51DC;
                                }
                            } else {
                                var10 = 0x14d2;
                                goto label_51DC;
                            }
                        } else {
                            var9 = 0x14b9;
                            goto label_51DC;
                        }
                    }
                } else if (!arg9) { goto label_1545; }
                else { goto label_1499; }
            } else {
            label_144F:
                var4 = arg1;
                var5 = arg2;
                var6 = var3;
            
                if (var6 < var5) {
                    var temp14 = msg.data[var6 * 0x20 + var4:var6 * 0x20 + var4 + 0x20];
                    var4 = 0x1472;
                    var6 = var2;
                    var5 = temp14;
                    var4 = func_5289(var5, var6);
                    var2 = var4;
                    var4 = var3;
                    var5 = 0x147e;
                    var6 = var4;
                    var5 = func_523A(var6);
                    var3 = var5;
                
                    if (var3 >= arg2) { goto label_1486; }
                    else { goto label_144F; }
                } else {
                    var7 = 0x1460;
                    goto label_51DC;
                }
            }
        } else {
            var temp15 = memory[0x40:0x60];
            memory[temp15:temp15 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp15 + 0x04:temp15 + 0x04 + 0x20] = 0x20;
            memory[temp15 + 0x24:temp15 + 0x24 + 0x20] = 0x0e;
            memory[temp15 + 0x44:temp15 + 0x44 + 0x20] = 0x746f6f206d616e79207061746873000000000000000000000000000000000000;
            var2 = temp15 + 0x64;
            var temp16 = memory[0x40:0x60];
            revert(memory[temp16:temp16 + var2 - temp16]);
        }
    }
    
    function func_1607(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7, var arg8, var arg9) returns (var r0) {
        var var0 = 0x00;
    
        if (storage[0x0c] == arg0) {
            var temp0 = memory[0x40:0x60];
            memory[0x40:0x60] = temp0 + 0xe0;
            memory[temp0:temp0 + 0x20] = 0xffffffffffffffffffffffffffffffffffffffff & 0x00;
            var temp1 = temp0 + 0x20;
            memory[temp1:temp1 + 0x20] = 0x60;
            var temp2 = temp1 + 0x20;
            memory[temp2:temp2 + 0x20] = 0x00;
            var temp3 = temp2 + 0x20;
            memory[temp3:temp3 + 0x20] = 0x00;
            var temp4 = temp3 + 0x20;
            memory[temp4:temp4 + 0x20] = 0x00;
            var temp5 = temp4 + 0x20;
            memory[temp5:temp5 + 0x20] = 0x00;
            memory[temp5 + 0x20:temp5 + 0x20 + 0x20] = 0x00;
            var var1 = temp0;
            memory[var1:var1 + 0x20] = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
        
            if (arg8 < 0x0a) {
                var var2 = arg8;
            
                if (var2 <= 0xffffffffffffffff) {
                    var temp6 = memory[0x40:0x60];
                    var temp7 = var2;
                    var2 = temp6;
                    var var3 = temp7;
                    memory[var2:var2 + 0x20] = var3;
                    memory[0x40:0x60] = var2 + var3 * 0x20 + 0x20;
                
                    if (!var3) {
                        memory[var1 + 0x20:var1 + 0x20 + 0x20] = var2;
                        var2 = 0x00;
                    
                        if (var2 >= arg8) {
                        label_1819:
                            storage[0x0d] = 0x02;
                            var2 = 0x182a;
                            var3 = memory[var1:var1 + 0x20];
                            var2 = func_2B7C(var3);
                            var temp8 = memory[var1 + 0x40:var1 + 0x40 + 0x20] > var2;
                            var2 = temp8;
                        
                            if (!var2) {
                                if (!var2) {
                                label_18C7:
                                    var2 = 0x00;
                                
                                    if (var2 >= arg8) {
                                        storage[0x0d] = 0x01;
                                        var temp9 = var1;
                                        memory[temp9 + 0x60:temp9 + 0x60 + 0x20] = storage[0x01];
                                        var3 = memory[temp9:temp9 + 0x20];
                                        var2 = 0x19af;
                                        var2 = func_2B7C(var3);
                                    
                                    label_19AF:
                                        var temp10 = var1;
                                        memory[temp10 + 0x80:temp10 + 0x80 + 0x20] = var2;
                                        var2 = 0x19c4;
                                        var var4 = memory[temp10 + 0x60:temp10 + 0x60 + 0x20];
                                        var3 = arg1;
                                        var2 = func_5289(var3, var4);
                                    
                                        if (memory[var1 + 0x80:var1 + 0x80 + 0x20] > var2) {
                                            var2 = arg1;
                                            var temp11 = var1;
                                            var3 = 0x1a45;
                                            var4 = memory[temp11 + 0x60:temp11 + 0x60 + 0x20];
                                            var var5 = memory[temp11 + 0x80:temp11 + 0x80 + 0x20];
                                            var3 = func_5272(var4, var5);
                                            var temp12 = var2;
                                            var2 = 0x1a4f;
                                            var temp13 = var3;
                                            var3 = temp12;
                                            var4 = temp13;
                                            var2 = func_5272(var3, var4);
                                            memory[var1 + 0xa0:var1 + 0xa0 + 0x20] = var2;
                                            var2 = !!arg2;
                                        
                                            if (!arg2) {
                                                if (!var2) {
                                                label_1B74:
                                                    return memory[var1 + 0xa0:var1 + 0xa0 + 0x20];
                                                } else {
                                                label_1A6B:
                                                    var2 = 0x2710;
                                                    var3 = 0x1a7d;
                                                    var4 = memory[var1 + 0xa0:var1 + 0xa0 + 0x20];
                                                    var5 = arg2;
                                                    var3 = func_539F(var4, var5);
                                                    var temp14 = var2;
                                                    var2 = 0x1a87;
                                                    var temp15 = var3;
                                                    var3 = temp14;
                                                    var4 = temp15;
                                                    var2 = func_53DC(var3, var4);
                                                    var temp16 = var2;
                                                    memory[var1 + 0xc0:var1 + 0xc0 + 0x20] = temp16;
                                                
                                                    if (address(this).balance >= temp16) {
                                                    label_1B1A:
                                                        var temp17 = memory[0x40:0x60];
                                                        var2 = 0x00;
                                                        var temp18;
                                                        temp18, memory[temp17:temp17 + var2] = address(block.coinbase).call.gas(msg.gas).value(memory[var1 + 0xc0:var1 + 0xc0 + 0x20])(memory[temp17:temp17 + var2]);
                                                        var4 = returndata.length;
                                                        var5 = var4;
                                                    
                                                        if (var5 == 0x00) {
                                                            var2 = var3;
                                                        
                                                            if (!var2) { revert(memory[0x00:0x00]); }
                                                        
                                                        label_1B72:
                                                            goto label_1B74;
                                                        } else {
                                                            var temp19 = memory[0x40:0x60];
                                                            var4 = temp19;
                                                            memory[0x40:0x60] = var4 + (returndata.length + 0x3f & ~0x1f);
                                                            memory[var4:var4 + 0x20] = returndata.length;
                                                            var temp20 = returndata.length;
                                                            memory[var4 + 0x20:var4 + 0x20 + temp20] = returndata[0x00:0x00 + temp20];
                                                            var2 = var3;
                                                        
                                                            if (var2) { goto label_1B72; }
                                                            else { revert(memory[0x00:0x00]); }
                                                        }
                                                    } else {
                                                        var temp21 = memory[var1 + 0xc0:var1 + 0xc0 + 0x20];
                                                        var temp22 = memory[0x40:0x60];
                                                        memory[temp22:temp22 + 0x20] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000;
                                                        memory[temp22 + 0x04:temp22 + 0x04 + 0x20] = temp21;
                                                        var2 = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
                                                        var3 = 0x2e1a7d4d;
                                                        var4 = temp22 + 0x24;
                                                        var5 = 0x00;
                                                        var var6 = memory[0x40:0x60];
                                                        var var7 = var4 - var6;
                                                        var var8 = var6;
                                                        var var9 = 0x00;
                                                        var var10 = var2;
                                                        var var11 = !address(var10).code.length;
                                                    
                                                        if (var11) { revert(memory[0x00:0x00]); }
                                                    
                                                        var temp23;
                                                        temp23, memory[var6:var6 + var5] = address(var10).call.gas(msg.gas).value(var9)(memory[var8:var8 + var7]);
                                                        var5 = !temp23;
                                                    
                                                        if (!var5) { goto label_1B1A; }
                                                    
                                                        var temp24 = returndata.length;
                                                        memory[0x00:0x00 + temp24] = returndata[0x00:0x00 + temp24];
                                                        revert(memory[0x00:0x00 + returndata.length]);
                                                    }
                                                }
                                            } else if (arg2 > 0x2710) { goto label_1B74; }
                                            else { goto label_1A6B; }
                                        } else {
                                            var temp25 = memory[0x40:0x60];
                                            memory[temp25:temp25 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                                            memory[temp25 + 0x04:temp25 + 0x04 + 0x20] = 0x20;
                                            memory[temp25 + 0x24:temp25 + 0x24 + 0x20] = 0x09;
                                            memory[temp25 + 0x44:temp25 + 0x44 + 0x20] = 0x6e6f2070726f6669740000000000000000000000000000000000000000000000;
                                            var2 = temp25 + 0x64;
                                        
                                        label_0161:
                                            var temp26 = memory[0x40:0x60];
                                            revert(memory[temp26:temp26 + var2 - temp26]);
                                        }
                                    } else {
                                        var3 = 0x00;
                                        var4 = var3;
                                    
                                        if (!arg9) {
                                            var5 = arg3;
                                            var6 = var2;
                                        
                                            if (var6 < memory[var5:var5 + 0x20]) {
                                                var3 = memory[var6 * 0x20 + 0x20 + var5:var6 * 0x20 + 0x20 + var5 + 0x20];
                                                var5 = arg4;
                                                var6 = var2;
                                            
                                                if (var6 < memory[var5:var5 + 0x20]) {
                                                    var4 = memory[var6 * 0x20 + 0x20 + var5:var6 * 0x20 + 0x20 + var5 + 0x20];
                                                
                                                label_1920:
                                                    var5 = 0x1980;
                                                    var6 = 0x0a;
                                                    var7 = 0x00;
                                                    var8 = memory[var1 + 0x20:var1 + 0x20 + 0x20];
                                                    var9 = var2;
                                                
                                                    if (var9 < memory[var8:var8 + 0x20]) {
                                                        var8 = memory[var9 * 0x20 + 0x20 + var8:var9 * 0x20 + 0x20 + var8 + 0x20];
                                                        var9 = var4;
                                                        var10 = var3;
                                                        var11 = arg5;
                                                        var var12 = arg6;
                                                        var var13 = var2;
                                                    
                                                        if (var13 < var12) {
                                                            var temp27 = var13 * 0x20 + var11;
                                                            var temp28 = temp27 + 0x20;
                                                            var11 = 0x196e;
                                                            var12 = temp28;
                                                            var13 = temp27;
                                                            var11 = func_5314(var12, var13);
                                                            var12 = arg7;
                                                            var13 = arg8;
                                                            var var14 = var2;
                                                        
                                                            if (var14 < var13) {
                                                                var temp29 = var12;
                                                                var temp30 = temp29 + var14 * 0x20;
                                                                var12 = 0x15d5;
                                                                var14 = temp29;
                                                                var13 = temp30;
                                                                var12, var13 = func_5338(var13, var14);
                                                                var14 = 0x00;
                                                                var var15 = 0x2dda;
                                                                var var16 = var8;
                                                                var var17 = var9;
                                                                var var18 = var10;
                                                                var var19 = var12;
                                                                var var20 = var13;
                                                                var15 = func_301B(var16, var17, var18, var19, var20);
                                                                var14 = var15;
                                                            
                                                                if (0x01 - var13) {
                                                                    var15 = 0x2f36;
                                                                    var16 = var8;
                                                                    var17 = var14;
                                                                    var18 = 0x00;
                                                                
                                                                    if (var18 < memory[var17:var17 + 0x20]) {
                                                                        var17 = memory[memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20]:memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20] + 0x20];
                                                                        var18 = var10;
                                                                        var19 = 0x2710;
                                                                        var20 = var12;
                                                                        var var21 = var13;
                                                                        var var22 = 0x00;
                                                                    
                                                                        if (var22 < var21) {
                                                                            var temp31 = var22 * 0xa0 + var20;
                                                                            var20 = 0x2ee4;
                                                                            var22 = temp31;
                                                                            var21 = var22 + (msg.data.length - var22);
                                                                            var20 = func_56B3(var21, var22);
                                                                            var21 = var14;
                                                                            var22 = 0x01;
                                                                        
                                                                            if (var22 >= memory[var21:var21 + 0x20]) {
                                                                                var23 = 0x2ef7;
                                                                                goto label_51DC;
                                                                            } else if (memory[memory[var22 * 0x20 + 0x20 + var21:var22 * 0x20 + 0x20 + var21 + 0x20] + 0x20:memory[var22 * 0x20 + 0x20 + var21:var22 * 0x20 + 0x20 + var21 + 0x20] + 0x20 + 0x20]) {
                                                                                var21 = var12;
                                                                                var22 = var13;
                                                                                var var23 = 0x01;
                                                                            
                                                                                if (var23 < var22) {
                                                                                    var temp32 = var21;
                                                                                    var21 = 0x053d;
                                                                                    var temp33 = var23 * 0xa0 + temp32;
                                                                                    var23 = temp33;
                                                                                    var22 = var23 + 0x20;
                                                                                    var var24 = 0x00;
                                                                                
                                                                                    if (var22 - var23 i< 0x20) { revert(memory[0x00:0x00]); }
                                                                                
                                                                                    var var25 = msg.data[var23:var23 + 0x20];
                                                                                    var var26 = 0x5331;
                                                                                    var var27 = var25;
                                                                                    func_4D2B(var27);
                                                                                
                                                                                label_5331:
                                                                                    var21 = var25;
                                                                                    // Error: Could not resolve jump destination!
                                                                                } else {
                                                                                    var24 = 0x2f20;
                                                                                
                                                                                label_51DC:
                                                                                    memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                                                                                    memory[0x04:0x24] = 0x32;
                                                                                    revert(memory[0x00:0x24]);
                                                                                }
                                                                            } else {
                                                                                var21 = address(this);
                                                                                var22 = 0x00;
                                                                                var23 = var22;
                                                                            
                                                                            label_0D3F:
                                                                                var24 = 0x0d4f;
                                                                                var25 = var16;
                                                                                var26 = var17;
                                                                                var27 = var18;
                                                                                var var28 = var19;
                                                                                var var29 = var20;
                                                                                var var30 = var21;
                                                                                var var31 = var22;
                                                                                var var32 = var23;
                                                                                func_1D92(var25, var26, var27, var28, var29, var30, var31, var32);
                                                                            
                                                                            label_0D4F:
                                                                                // Error: Could not resolve jump destination!
                                                                            }
                                                                        } else {
                                                                            var23 = 0x2ece;
                                                                            goto label_51DC;
                                                                        }
                                                                    } else {
                                                                        var19 = 0x2eab;
                                                                        goto label_51DC;
                                                                    }
                                                                } else {
                                                                    var15 = 0x2e3e;
                                                                    var16 = var8;
                                                                    var17 = var14;
                                                                    var18 = 0x00;
                                                                
                                                                    if (var18 < memory[var17:var17 + 0x20]) {
                                                                        var17 = memory[memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20]:memory[var18 * 0x20 + 0x20 + var17:var18 * 0x20 + 0x20 + var17 + 0x20] + 0x20];
                                                                        var18 = var10;
                                                                        var19 = 0x2710;
                                                                        var20 = var12;
                                                                        var21 = var13;
                                                                        var22 = 0x00;
                                                                    
                                                                        if (var22 < var21) {
                                                                            var temp34 = var22 * 0xa0 + var20;
                                                                            var20 = 0x2e35;
                                                                            var22 = temp34;
                                                                            var21 = var22 + (msg.data.length - var22);
                                                                            var20 = func_56B3(var21, var22);
                                                                            var21 = address(this);
                                                                            var22 = 0x00;
                                                                            var23 = var22;
                                                                            goto label_0D3F;
                                                                        } else {
                                                                            var23 = 0x2e1f;
                                                                            goto label_51DC;
                                                                        }
                                                                    } else {
                                                                        var19 = 0x2dfc;
                                                                        goto label_51DC;
                                                                    }
                                                                }
                                                            } else {
                                                                var15 = 0x15c3;
                                                                goto label_51DC;
                                                            }
                                                        } else {
                                                            var14 = 0x1959;
                                                            goto label_51DC;
                                                        }
                                                    } else {
                                                        var10 = 0x193d;
                                                        goto label_51DC;
                                                    }
                                                } else {
                                                    var7 = 0x1915;
                                                    goto label_51DC;
                                                }
                                            } else {
                                                var7 = 0x18f9;
                                                goto label_51DC;
                                            }
                                        } else {
                                            var3 = memory[var1:var1 + 0x20];
                                            var4 = 0x2710;
                                            goto label_1920;
                                        }
                                    }
                                } else {
                                label_183F:
                                    var2 = 0x00;
                                
                                    if (var2 >= arg8) {
                                        storage[0x0d] = 0x01;
                                        var temp35 = var1;
                                        memory[temp35 + 0x60:temp35 + 0x60 + 0x20] = storage[0x01];
                                        var3 = memory[temp35:temp35 + 0x20];
                                        var2 = 0x19af;
                                        var2 = func_2B7C(var3);
                                        goto label_19AF;
                                    } else {
                                        var3 = 0x18af;
                                        var4 = 0x0a;
                                        var5 = 0x00;
                                        var6 = memory[var1 + 0x20:var1 + 0x20 + 0x20];
                                        var7 = var2;
                                    
                                        if (var7 < memory[var6:var6 + 0x20]) {
                                            var6 = memory[var7 * 0x20 + 0x20 + var6:var7 * 0x20 + 0x20 + var6 + 0x20];
                                            var7 = 0x2710;
                                            var8 = memory[var1:var1 + 0x20];
                                            var9 = arg5;
                                            var10 = arg6;
                                            var11 = var2;
                                        
                                            if (var11 < var10) {
                                                var temp36 = var11 * 0x20 + var9;
                                                var temp37 = temp36 + 0x20;
                                                var9 = 0x189d;
                                                var11 = temp36;
                                                var10 = temp37;
                                                var9 = func_5314(var10, var11);
                                                var10 = arg7;
                                                var11 = arg8;
                                                var12 = var2;
                                            
                                                if (var12 < var11) {
                                                    var temp38 = var10;
                                                    var temp39 = temp38 + var12 * 0x20;
                                                    var10 = 0x1528;
                                                    var12 = temp38;
                                                    var11 = temp39;
                                                    var10, var11 = func_5338(var11, var12);
                                                    var12 = 0x00;
                                                    var13 = 0x2c22;
                                                    var14 = var6;
                                                    var15 = var7;
                                                    var16 = var8;
                                                    var17 = var10;
                                                    var18 = var11;
                                                    var13 = func_301B(var14, var15, var16, var17, var18);
                                                    var12 = var13;
                                                    var13 = var10;
                                                    var14 = var11;
                                                    var15 = 0x00;
                                                
                                                    if (var15 < var14) {
                                                        var temp40 = var15 * 0xa0 + var13 + 0x40;
                                                        var temp41 = temp40 + 0x20;
                                                        var13 = 0x2c4f;
                                                        var14 = temp41;
                                                        var15 = temp40;
                                                        var16 = 0x00;
                                                    
                                                        if (var14 - var15 i< 0x20) { revert(memory[0x00:0x00]); }
                                                    
                                                        var17 = msg.data[var15:var15 + 0x20];
                                                        var18 = 0x5331;
                                                        var19 = var17;
                                                        func_4FB4(var19);
                                                        goto label_5331;
                                                    } else {
                                                        var16 = 0x2c37;
                                                        goto label_51DC;
                                                    }
                                                } else {
                                                    var13 = 0x1516;
                                                    goto label_51DC;
                                                }
                                            } else {
                                                var12 = 0x1888;
                                                goto label_51DC;
                                            }
                                        } else {
                                            var8 = 0x1866;
                                            goto label_51DC;
                                        }
                                    }
                                }
                            } else if (!arg9) { goto label_18C7; }
                            else { goto label_183F; }
                        } else {
                        label_179F:
                            var3 = 0x02;
                            var4 = var2;
                        
                            if (var4 < 0x0a) {
                                var3 = storage[var4 + var3];
                                var4 = memory[var1 + 0x20:var1 + 0x20 + 0x20];
                                var5 = var2;
                            
                                if (var5 < memory[var4:var4 + 0x20]) {
                                    memory[var5 * 0x20 + 0x20 + var4:var5 * 0x20 + 0x20 + var4 + 0x20] = var3;
                                    var3 = memory[var1 + 0x20:var1 + 0x20 + 0x20];
                                    var4 = var2;
                                
                                    if (var4 < memory[var3:var3 + 0x20]) {
                                        var temp42 = memory[var4 * 0x20 + 0x20 + var3:var4 * 0x20 + 0x20 + var3 + 0x20];
                                        var3 = temp42;
                                        var4 = var1 + 0x40;
                                        var5 = 0x1804;
                                        var6 = var3;
                                        var7 = memory[var4:var4 + 0x20];
                                        var5 = func_5289(var6, var7);
                                        memory[var4:var4 + 0x20] = var5;
                                        var3 = var2;
                                        var4 = 0x1811;
                                        var5 = var3;
                                        var4 = func_523A(var5);
                                        var2 = var4;
                                    
                                        if (var2 >= arg8) { goto label_1819; }
                                        else { goto label_179F; }
                                    } else {
                                        var5 = 0x17eb;
                                        goto label_51DC;
                                    }
                                } else {
                                    var6 = 0x17c9;
                                    goto label_51DC;
                                }
                            } else {
                                var5 = 0x17b1;
                                goto label_51DC;
                            }
                        }
                    } else {
                        var temp43 = var2;
                        var temp44 = var3 * 0x20;
                        memory[temp43 + 0x20:temp43 + 0x20 + temp44] = msg.data[msg.data.length:msg.data.length + temp44];
                        memory[var1 + 0x20:var1 + 0x20 + 0x20] = temp43;
                        var2 = 0x00;
                    
                        if (var2 >= arg8) { goto label_1819; }
                        else { goto label_179F; }
                    }
                } else {
                    var3 = 0x1764;
                    memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                    memory[0x04:0x24] = 0x41;
                    revert(memory[0x00:0x24]);
                }
            } else {
                var temp45 = memory[0x40:0x60];
                memory[temp45:temp45 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                memory[temp45 + 0x04:temp45 + 0x04 + 0x20] = 0x20;
                memory[temp45 + 0x24:temp45 + 0x24 + 0x20] = 0x0e;
                memory[temp45 + 0x44:temp45 + 0x44 + 0x20] = 0x746f6f206d616e79207061746873000000000000000000000000000000000000;
                var2 = temp45 + 0x64;
                goto label_0161;
            }
        } else {
            var temp46 = memory[0x40:0x60];
            memory[temp46:temp46 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp46 + 0x04:temp46 + 0x04 + 0x20] = 0x20;
            memory[temp46 + 0x24:temp46 + 0x24 + 0x20] = 0x15;
            memory[temp46 + 0x44:temp46 + 0x44 + 0x20] = 0x6e6f74207468652073616d652073616e64776963680000000000000000000000;
            var1 = temp46 + 0x64;
            goto label_0161;
        }
    }
    
    function func_1B87(var arg0, var arg1, var arg2, var arg3) {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0xd3e1c28400000000000000000000000000000000000000000000000000000000;
        var var0 = 0x85dfbd2d289f545f3dd6d58db6b71ae032f019f8;
        var var1 = 0xd3e1c284;
        var var2 = 0x132a;
        var var3 = arg0;
        var var4 = arg1;
        var var5 = arg2;
        var var6 = arg3;
        var var7 = temp0 + 0x04;
        var2 = func_52EA(var3, var4, var5, var6, var7);
        var3 = 0x00;
        var4 = memory[0x40:0x60];
        var5 = var2 - var4;
        var6 = var4;
        var7 = var0;
        var var8 = !address(var7).code.length;
    
        if (var8) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
        var3 = !temp1;
    
        if (!var3) { return; }
    
        var temp2 = returndata.length;
        memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
        revert(memory[0x00:0x00 + returndata.length]);
    }
    
    function func_1BDD(var arg0, var arg1, var arg2, var arg3) {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0xfa483e7200000000000000000000000000000000000000000000000000000000;
        var var0 = 0x8d12dab782b183d032c22b6aeb9e3bc74737f247;
        var var1 = 0xfa483e72;
        var var2 = 0x132a;
        var var3 = arg0;
        var var4 = arg1;
        var var5 = arg2;
        var var6 = arg3;
        var var7 = temp0 + 0x04;
        var2 = func_52EA(var3, var4, var5, var6, var7);
        var3 = 0x00;
        var4 = memory[0x40:0x60];
        var5 = var2 - var4;
        var6 = var4;
        var7 = var0;
        var var8 = !address(var7).code.length;
    
        if (var8) { revert(memory[0x00:0x00]); }
    
        var temp1;
        temp1, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
        var3 = !temp1;
    
        if (!var3) { return; }
    
        var temp2 = returndata.length;
        memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
        revert(memory[0x00:0x00 + returndata.length]);
    }
    
    function func_1C33(var arg0, var arg1, var arg2) returns (var r0, var arg0, var arg1) {
        var var0 = 0x00;
        var var1 = var0;
        var var2 = 0x60;
        var var3 = 0x00;
        var temp0 = arg2;
        var var4 = 0x1c4e;
        var var5 = temp0 + 0x20 + memory[temp0:temp0 + 0x20];
        var var6 = temp0 + 0x20;
        var4 = func_54CD(var5, var6);
        var3 = var4;
    
        if (!memory[var3 + 0x60:var3 + 0x60 + 0x20]) {
            var4 = 0x00;
            var5 = 0x1c9c;
            var6 = memory[var3:var3 + 0x20];
            var var7;
            var5, var6, var7 = func_2FDF(var6);
            var4 = var5;
            var5 = 0x00;
        
            if (arg0 i> var5) {
                var5 = arg0;
            
                if (memory[var3 + 0x20:var3 + 0x20 + 0x20] & 0xffff == 0x2710) {
                label_1CE6:
                    var temp1 = memory[0x40:0x60];
                    memory[temp1:temp1 + 0x20] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;
                    memory[temp1 + 0x04:temp1 + 0x04 + 0x20] = msg.sender;
                    memory[temp1 + 0x24:temp1 + 0x24 + 0x20] = var5;
                    var6 = var4 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var7 = 0xa9059cbb;
                    var var8 = temp1 + 0x44;
                    var var9 = 0x00;
                    var var10 = memory[0x40:0x60];
                    var var11 = var8 - var10;
                    var var12 = var10;
                    var var13 = 0x00;
                    var var14 = var6;
                    var var15 = !address(var14).code.length;
                
                    if (var15) { revert(memory[0x00:0x00]); }
                
                    var temp2;
                    temp2, memory[var10:var10 + var9] = address(var14).call.gas(msg.gas).value(var13)(memory[var12:var12 + var11]);
                    var9 = !temp2;
                
                    if (!var9) {
                        var temp3 = memory[0x40:0x60];
                        memory[0x40:0x60] = temp3 + 0x20;
                        memory[temp3:temp3 + 0x20] = 0x00;
                        var2 = temp3;
                        var1 = 0x00;
                        var0 = var1;
                    
                    label_1D89:
                        arg1 = var2;
                        arg0 = var1;
                        r0 = var0;
                        return r0, arg0, arg1;
                    } else {
                        var temp4 = returndata.length;
                        memory[0x00:0x00 + temp4] = returndata[0x00:0x00 + temp4];
                        revert(memory[0x00:0x00 + returndata.length]);
                    }
                } else {
                label_1CC5:
                    var6 = memory[var3 + 0x20:var3 + 0x20 + 0x20] & 0xffff;
                    var7 = 0x1cd9;
                    var8 = var5;
                    var9 = 0x2710;
                    var7 = func_539F(var8, var9);
                    var temp5 = var6;
                    var6 = 0x1ce3;
                    var temp6 = var7;
                    var7 = temp5;
                    var8 = temp6;
                    var6 = func_53DC(var7, var8);
                    var5 = var6;
                    goto label_1CE6;
                }
            } else {
                var6 = arg1;
                var5 = var6;
            
                if (memory[var3 + 0x20:var3 + 0x20 + 0x20] & 0xffff == 0x2710) { goto label_1CE6; }
                else { goto label_1CC5; }
            }
        } else if (arg0 i< 0x00) {
            var4 = 0x1c79;
            var5 = arg0;
            var4 = func_5595(var5);
        
        label_1C79:
            var0 = 0x01;
            var1 = var4;
            var2 = memory[var3 + 0x80:var3 + 0x80 + 0x20];
            goto label_1D89;
        } else {
            var4 = 0x1c6b;
            var5 = arg1;
            var4 = func_5595(var5);
            goto label_1C79;
        }
    }
    
    function func_1D92(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) {
        var var0 = !(memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff);
    
        if (var0) {
            if (!var0) {
            label_1EA9:
                var0 = memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff == 0x03;
            
                if (var0) {
                    if (!var0) {
                    label_1F62:
                    
                        if (0x07 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff)) {
                            var0 = memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff == 0x09;
                        
                            if (var0) {
                                if (!var0) {
                                label_20C0:
                                
                                    if (!(0x0a - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp64 = arg4;
                                        var temp65 = memory[temp64 + 0x20:temp64 + 0x20 + 0x20];
                                        var temp66 = memory[temp64:temp64 + 0x20];
                                        var temp67 = memory[0x40:0x60];
                                        memory[temp67:temp67 + 0x20] = 0x9165c99d00000000000000000000000000000000000000000000000000000000;
                                        memory[temp67 + 0x04:temp67 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp67 + 0x24:temp67 + 0x24 + 0x20] = arg3 & 0xffff;
                                        memory[temp67 + 0x44:temp67 + 0x44 + 0x20] = arg0;
                                        memory[temp67 + 0x64:temp67 + 0x64 + 0x20] = temp65 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp67 + 0x84:temp67 + 0x84 + 0x20] = temp66 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp67 + 0xa4:temp67 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp67 + 0xc4:temp67 + 0xc4 + 0x20] = !!arg6;
                                        var0 = 0x3696dc128d00eb1211a29219ecb88539e88b8f28;
                                        var1 = 0x9165c99d;
                                        var2 = temp67 + 0xe4;
                                        goto label_1E74;
                                    } else if (!(0x0b - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp60 = arg4;
                                        var temp61 = memory[temp60 + 0x20:temp60 + 0x20 + 0x20];
                                        var temp62 = memory[temp60:temp60 + 0x20];
                                        var temp63 = memory[0x40:0x60];
                                        memory[temp63:temp63 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                        memory[temp63 + 0x04:temp63 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp63 + 0x24:temp63 + 0x24 + 0x20] = arg0;
                                        memory[temp63 + 0x44:temp63 + 0x44 + 0x20] = temp61 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp63 + 0x64:temp63 + 0x64 + 0x20] = temp62 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp63 + 0x84:temp63 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp63 + 0xa4:temp63 + 0xa4 + 0x20] = !!arg6;
                                        var0 = 0x7df709fe491301a01a5176ef0436e3776c9d3b96;
                                        var1 = 0x21c4b64f;
                                        var2 = temp63 + 0xc4;
                                        goto label_1E74;
                                    } else if (!(0x0d - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp56 = arg4;
                                        var temp57 = memory[temp56 + 0x20:temp56 + 0x20 + 0x20];
                                        var temp58 = memory[temp56:temp56 + 0x20];
                                        var temp59 = memory[0x40:0x60];
                                        memory[temp59:temp59 + 0x20] = 0xed9f057700000000000000000000000000000000000000000000000000000000;
                                        memory[temp59 + 0x04:temp59 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp59 + 0x24:temp59 + 0x24 + 0x20] = arg0;
                                        memory[temp59 + 0x44:temp59 + 0x44 + 0x20] = temp57 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp59 + 0x64:temp59 + 0x64 + 0x20] = temp58 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp59 + 0x84:temp59 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp59 + 0xa4:temp59 + 0xa4 + 0x20] = 0x8f8dd7db1bda5ed3da8c9daf3bfa471c12d58486;
                                        memory[temp59 + 0xc4:temp59 + 0xc4 + 0x20] = 0xa128ba44b2738a558a1fdc06d6303d52d3cef8c1;
                                        memory[temp59 + 0xe4:temp59 + 0xe4 + 0x20] = !!arg6;
                                        var0 = 0xad87636701d6bedbbf82c028492582cd5a4e374b;
                                        var1 = 0xed9f0577;
                                        var2 = temp59 + 0x0104;
                                        goto label_1E74;
                                    } else if (!(0x0f - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp50 = arg4;
                                        var temp51 = memory[temp50 + 0x20:temp50 + 0x20 + 0x20];
                                        var temp52 = memory[temp50 + 0x80:temp50 + 0x80 + 0x20];
                                        var temp53 = memory[temp50:temp50 + 0x20];
                                        var temp54 = memory[temp50 + 0x60:temp50 + 0x60 + 0x20];
                                        var temp55 = memory[0x40:0x60];
                                        memory[temp55:temp55 + 0x20] = 0xe51ecf4700000000000000000000000000000000000000000000000000000000;
                                        memory[temp55 + 0x04:temp55 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp55 + 0x24:temp55 + 0x24 + 0x20] = arg0;
                                        memory[temp55 + 0x44:temp55 + 0x44 + 0x20] = arg1;
                                        memory[temp55 + 0x64:temp55 + 0x64 + 0x20] = temp51 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp55 + 0x84:temp55 + 0x84 + 0x20] = temp52 & 0xffff;
                                        memory[temp55 + 0xa4:temp55 + 0xa4 + 0x20] = temp53 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp55 + 0xc4:temp55 + 0xc4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp55 + 0xe4:temp55 + 0xe4 + 0x20] = !!arg6;
                                        memory[temp55 + 0x0104:temp55 + 0x0104 + 0x20] = temp54 & 0xffff;
                                        memory[temp55 + 0x0124:temp55 + 0x0124 + 0x20] = arg7 & 0xff;
                                        var0 = 0xeb556ddc5ce9d91a438837a1eb5c320cc5b73b82;
                                        var1 = 0xe51ecf47;
                                        var2 = temp55 + 0x0144;
                                        goto label_1E74;
                                    } else if (!(0x23 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp45 = arg4;
                                        var temp46 = memory[temp45 + 0x20:temp45 + 0x20 + 0x20];
                                        var temp47 = memory[temp45:temp45 + 0x20];
                                        var temp48 = memory[temp45 + 0x60:temp45 + 0x60 + 0x20];
                                        var temp49 = memory[0x40:0x60];
                                        memory[temp49:temp49 + 0x20] = 0x14c0b49100000000000000000000000000000000000000000000000000000000;
                                        memory[temp49 + 0x04:temp49 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp49 + 0x24:temp49 + 0x24 + 0x20] = arg0;
                                        memory[temp49 + 0x44:temp49 + 0x44 + 0x20] = arg1;
                                        memory[temp49 + 0x64:temp49 + 0x64 + 0x20] = temp46 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp49 + 0x84:temp49 + 0x84 + 0x20] = temp47 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp49 + 0xa4:temp49 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp49 + 0xc4:temp49 + 0xc4 + 0x20] = !!arg6;
                                        memory[temp49 + 0xe4:temp49 + 0xe4 + 0x20] = temp48 & 0xffff;
                                        var0 = 0x9c942459efb9d84fc8ee5a0dc7da04f4f296fec3;
                                        var1 = 0x14c0b491;
                                        var2 = temp49 + 0x0104;
                                        goto label_1E74;
                                    } else if (!(0x24 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                        var temp40 = arg4;
                                        var temp41 = memory[temp40 + 0x20:temp40 + 0x20 + 0x20];
                                        var temp42 = memory[temp40:temp40 + 0x20];
                                        var temp43 = memory[temp40 + 0x60:temp40 + 0x60 + 0x20];
                                        var temp44 = memory[0x40:0x60];
                                        memory[temp44:temp44 + 0x20] = 0x274e9c5100000000000000000000000000000000000000000000000000000000;
                                        memory[temp44 + 0x04:temp44 + 0x04 + 0x20] = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
                                        memory[temp44 + 0x24:temp44 + 0x24 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp44 + 0x44:temp44 + 0x44 + 0x20] = arg0;
                                        memory[temp44 + 0x64:temp44 + 0x64 + 0x20] = temp41 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp44 + 0x84:temp44 + 0x84 + 0x20] = temp42 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp44 + 0xa4:temp44 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp44 + 0xc4:temp44 + 0xc4 + 0x20] = !!arg6;
                                        memory[temp44 + 0xe4:temp44 + 0xe4 + 0x20] = temp43 & 0xffff;
                                        var0 = 0x2479a86f9f692aa25c769fcb11084a39a4ba3f2e;
                                        var1 = 0x274e9c51;
                                        var2 = temp44 + 0x0104;
                                        goto label_1E74;
                                    } else if (0x25 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff)) {
                                        var0 = memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff == 0x27;
                                    
                                        if (var0) {
                                            if (!var0) {
                                            label_26AD:
                                            
                                                if (!(0x2c - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                                    var temp26 = arg4;
                                                    var temp27 = memory[temp26 + 0x20:temp26 + 0x20 + 0x20];
                                                    var temp28 = memory[temp26 + 0x80:temp26 + 0x80 + 0x20];
                                                    var temp29 = memory[temp26:temp26 + 0x20];
                                                    var temp30 = memory[temp26 + 0x60:temp26 + 0x60 + 0x20];
                                                    var temp31 = memory[0x40:0x60];
                                                    memory[temp31:temp31 + 0x20] = 0xe51ecf4700000000000000000000000000000000000000000000000000000000;
                                                    memory[temp31 + 0x04:temp31 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp31 + 0x24:temp31 + 0x24 + 0x20] = arg0;
                                                    memory[temp31 + 0x44:temp31 + 0x44 + 0x20] = arg1;
                                                    memory[temp31 + 0x64:temp31 + 0x64 + 0x20] = temp27 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp31 + 0x84:temp31 + 0x84 + 0x20] = temp28 & 0xffff;
                                                    memory[temp31 + 0xa4:temp31 + 0xa4 + 0x20] = temp29 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp31 + 0xc4:temp31 + 0xc4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp31 + 0xe4:temp31 + 0xe4 + 0x20] = !!arg6;
                                                    memory[temp31 + 0x0104:temp31 + 0x0104 + 0x20] = temp30 & 0xffff;
                                                    memory[temp31 + 0x0124:temp31 + 0x0124 + 0x20] = arg7 & 0xff;
                                                    var0 = 0xb0186fb0d024716859f2b91f338bfbde44ec7845;
                                                    var1 = 0xe51ecf47;
                                                    var2 = temp31 + 0x0144;
                                                    goto label_1E74;
                                                } else if (!(0x2f - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                                    var temp22 = arg4;
                                                    var temp23 = memory[temp22 + 0x20:temp22 + 0x20 + 0x20];
                                                    var temp24 = memory[temp22:temp22 + 0x20];
                                                    var temp25 = memory[0x40:0x60];
                                                    memory[temp25:temp25 + 0x20] = 0x9165c99d00000000000000000000000000000000000000000000000000000000;
                                                    memory[temp25 + 0x04:temp25 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp25 + 0x24:temp25 + 0x24 + 0x20] = arg3 & 0xffff;
                                                    memory[temp25 + 0x44:temp25 + 0x44 + 0x20] = arg0;
                                                    memory[temp25 + 0x64:temp25 + 0x64 + 0x20] = temp23 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp25 + 0x84:temp25 + 0x84 + 0x20] = temp24 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp25 + 0xa4:temp25 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp25 + 0xc4:temp25 + 0xc4 + 0x20] = !!arg6;
                                                    var0 = 0x8d12dab782b183d032c22b6aeb9e3bc74737f247;
                                                    var1 = 0x9165c99d;
                                                    var2 = temp25 + 0xe4;
                                                    goto label_1E74;
                                                } else if (!(0x31 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                                    var temp17 = arg4;
                                                    var temp18 = memory[temp17 + 0x20:temp17 + 0x20 + 0x20];
                                                    var temp19 = memory[temp17:temp17 + 0x20];
                                                    var temp20 = memory[temp17 + 0x60:temp17 + 0x60 + 0x20];
                                                    var temp21 = memory[0x40:0x60];
                                                    memory[temp21:temp21 + 0x20] = 0x92590b0d00000000000000000000000000000000000000000000000000000000;
                                                    memory[temp21 + 0x04:temp21 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp21 + 0x24:temp21 + 0x24 + 0x20] = arg0;
                                                    memory[temp21 + 0x44:temp21 + 0x44 + 0x20] = temp18 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp21 + 0x64:temp21 + 0x64 + 0x20] = temp19 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp21 + 0x84:temp21 + 0x84 + 0x20] = temp20 & 0xffff;
                                                    memory[temp21 + 0xa4:temp21 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp21 + 0xc4:temp21 + 0xc4 + 0x20] = !!arg6;
                                                    memory[temp21 + 0xe4:temp21 + 0xe4 + 0x20] = arg7 & 0xff;
                                                    var0 = 0x6ceb8776864d47d397496bcd278cd2e97b86a5f9;
                                                    var1 = 0x92590b0d;
                                                    var2 = temp21 + 0x0104;
                                                    goto label_1E74;
                                                } else if (!(0x34 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                                    var temp13 = arg4;
                                                    var temp14 = memory[temp13 + 0x20:temp13 + 0x20 + 0x20];
                                                    var temp15 = memory[temp13:temp13 + 0x20];
                                                    var temp16 = memory[0x40:0x60];
                                                    memory[temp16:temp16 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                                    memory[temp16 + 0x04:temp16 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp16 + 0x24:temp16 + 0x24 + 0x20] = arg0;
                                                    memory[temp16 + 0x44:temp16 + 0x44 + 0x20] = temp14 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp16 + 0x64:temp16 + 0x64 + 0x20] = temp15 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp16 + 0x84:temp16 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp16 + 0xa4:temp16 + 0xa4 + 0x20] = !!arg6;
                                                    var0 = 0x4bd6a64b1174515a9cd2eb6d62fc345167fdf394;
                                                    var1 = 0x21c4b64f;
                                                    var2 = temp16 + 0xc4;
                                                    goto label_1E74;
                                                } else if (!(0x36 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff))) {
                                                    var temp9 = arg4;
                                                    var temp10 = memory[temp9 + 0x20:temp9 + 0x20 + 0x20];
                                                    var temp11 = memory[temp9:temp9 + 0x20];
                                                    var temp12 = memory[0x40:0x60];
                                                    memory[temp12:temp12 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                                    memory[temp12 + 0x04:temp12 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp12 + 0x24:temp12 + 0x24 + 0x20] = arg0;
                                                    memory[temp12 + 0x44:temp12 + 0x44 + 0x20] = temp10 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp12 + 0x64:temp12 + 0x64 + 0x20] = temp11 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp12 + 0x84:temp12 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp12 + 0xa4:temp12 + 0xa4 + 0x20] = !!arg6;
                                                    var0 = 0xc3730c00d6e13c2a9286851da01cd68133c545f8;
                                                    var1 = 0x21c4b64f;
                                                    var2 = temp12 + 0xc4;
                                                    goto label_1E74;
                                                } else if (0x37 - (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff)) {
                                                    var temp0 = memory[0x40:0x60];
                                                    memory[temp0:temp0 + 0x20] = 0xf96d2b8500000000000000000000000000000000000000000000000000000000;
                                                    var0 = 0xd694d836721a1e0474867909688244d018f157bf;
                                                    var var1 = 0xf96d2b85;
                                                    var var2 = 0x2b42;
                                                    var var3 = arg0;
                                                    var var4 = arg1;
                                                    var var5 = arg2;
                                                    var var6 = arg4;
                                                    var var7 = arg5;
                                                    var var8 = arg6;
                                                    var var9 = arg7;
                                                    var var10 = temp0 + 0x04;
                                                    var2 = func_55CD(var3, var4, var5, var6, var7, var8, var9, var10);
                                                    var3 = 0x00;
                                                    var4 = memory[0x40:0x60];
                                                    var5 = var2 - var4;
                                                    var6 = var4;
                                                    var7 = var0;
                                                    var8 = !address(var7).code.length;
                                                
                                                    if (var8) { revert(memory[0x00:0x00]); }
                                                
                                                    var temp1;
                                                    temp1, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
                                                    var3 = !temp1;
                                                
                                                    if (!var3) { return; }
                                                
                                                    var temp2 = returndata.length;
                                                    memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
                                                    revert(memory[0x00:0x00 + returndata.length]);
                                                } else {
                                                    var temp3 = arg4;
                                                    var temp4 = memory[temp3 + 0x20:temp3 + 0x20 + 0x20];
                                                    var temp5 = memory[temp3:temp3 + 0x20];
                                                    var temp6 = memory[0x40:0x60];
                                                    memory[temp6:temp6 + 0x20] = 0x9165c99d00000000000000000000000000000000000000000000000000000000;
                                                    memory[temp6 + 0x04:temp6 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp6 + 0x24:temp6 + 0x24 + 0x20] = arg3 & 0xffff;
                                                    memory[temp6 + 0x44:temp6 + 0x44 + 0x20] = arg0;
                                                    memory[temp6 + 0x64:temp6 + 0x64 + 0x20] = temp4 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp6 + 0x84:temp6 + 0x84 + 0x20] = temp5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp6 + 0xa4:temp6 + 0xa4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                    memory[temp6 + 0xc4:temp6 + 0xc4 + 0x20] = !!arg6;
                                                    var0 = 0x75477373702bc8cc710ea4ba88e05e71daab0f05;
                                                    var1 = 0x9165c99d;
                                                    var2 = temp6 + 0xe4;
                                                
                                                label_1E74:
                                                    var3 = 0x00;
                                                    var4 = memory[0x40:0x60];
                                                    var5 = var2 - var4;
                                                    var6 = var4;
                                                    var7 = var0;
                                                    var8 = !address(var7).code.length;
                                                
                                                    if (var8) { revert(memory[0x00:0x00]); }
                                                
                                                label_1E8C:
                                                    var temp7;
                                                    temp7, memory[var4:var4 + var3] = address(var7).delegatecall.gas(msg.gas)(memory[var6:var6 + var5]);
                                                    var3 = !temp7;
                                                
                                                    if (!var3) { return; }
                                                
                                                    var temp8 = returndata.length;
                                                    memory[0x00:0x00 + temp8] = returndata[0x00:0x00 + temp8];
                                                    revert(memory[0x00:0x00 + returndata.length]);
                                                }
                                            } else {
                                            label_2619:
                                                var temp32 = arg4;
                                                var temp33 = memory[temp32 + 0x20:temp32 + 0x20 + 0x20];
                                                var temp34 = memory[temp32:temp32 + 0x20];
                                                var temp35 = memory[0x40:0x60];
                                                memory[temp35:temp35 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                                memory[temp35 + 0x04:temp35 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                memory[temp35 + 0x24:temp35 + 0x24 + 0x20] = arg0;
                                                memory[temp35 + 0x44:temp35 + 0x44 + 0x20] = temp33 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                memory[temp35 + 0x64:temp35 + 0x64 + 0x20] = temp34 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                memory[temp35 + 0x84:temp35 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                                memory[temp35 + 0xa4:temp35 + 0xa4 + 0x20] = !!arg6;
                                                var0 = 0xbae6875692011c62681ae0d2c81f892ac1c57c75;
                                                var1 = 0x21c4b64f;
                                                var2 = temp35 + 0xc4;
                                                goto label_1E74;
                                            }
                                        } else if (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff != 0x2b) { goto label_26AD; }
                                        else { goto label_2619; }
                                    } else {
                                        var temp36 = arg4;
                                        var temp37 = memory[temp36 + 0x20:temp36 + 0x20 + 0x20];
                                        var temp38 = memory[temp36:temp36 + 0x20];
                                        var temp39 = memory[0x40:0x60];
                                        memory[temp39:temp39 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                        memory[temp39 + 0x04:temp39 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp39 + 0x24:temp39 + 0x24 + 0x20] = arg0;
                                        memory[temp39 + 0x44:temp39 + 0x44 + 0x20] = temp37 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp39 + 0x64:temp39 + 0x64 + 0x20] = temp38 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp39 + 0x84:temp39 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                        memory[temp39 + 0xa4:temp39 + 0xa4 + 0x20] = !!arg6;
                                        var0 = 0x85dfbd2d289f545f3dd6d58db6b71ae032f019f8;
                                        var1 = 0x21c4b64f;
                                        var2 = temp39 + 0xc4;
                                        goto label_1E74;
                                    }
                                } else {
                                label_202C:
                                    var temp68 = arg4;
                                    var temp69 = memory[temp68 + 0x20:temp68 + 0x20 + 0x20];
                                    var temp70 = memory[temp68:temp68 + 0x20];
                                    var temp71 = memory[0x40:0x60];
                                    memory[temp71:temp71 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                                    memory[temp71 + 0x04:temp71 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                                    memory[temp71 + 0x24:temp71 + 0x24 + 0x20] = arg0;
                                    memory[temp71 + 0x44:temp71 + 0x44 + 0x20] = temp69 & 0xffffffffffffffffffffffffffffffffffffffff;
                                    memory[temp71 + 0x64:temp71 + 0x64 + 0x20] = temp70 & 0xffffffffffffffffffffffffffffffffffffffff;
                                    memory[temp71 + 0x84:temp71 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                                    memory[temp71 + 0xa4:temp71 + 0xa4 + 0x20] = !!arg6;
                                    var0 = 0x91577662ba4b2639b06bd38b725d77fdcc1bcca9;
                                    var1 = 0x21c4b64f;
                                    var2 = temp71 + 0xc4;
                                    goto label_1E74;
                                }
                            } else if (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff != 0x33) { goto label_20C0; }
                            else { goto label_202C; }
                        } else {
                            var temp72 = arg4;
                            var temp73 = memory[temp72 + 0x20:temp72 + 0x20 + 0x20];
                            var temp74 = memory[temp72:temp72 + 0x20];
                            var temp75 = memory[0x40:0x60];
                            memory[temp75:temp75 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                            memory[temp75 + 0x04:temp75 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                            memory[temp75 + 0x24:temp75 + 0x24 + 0x20] = arg0;
                            memory[temp75 + 0x44:temp75 + 0x44 + 0x20] = temp73 & 0xffffffffffffffffffffffffffffffffffffffff;
                            memory[temp75 + 0x64:temp75 + 0x64 + 0x20] = temp74 & 0xffffffffffffffffffffffffffffffffffffffff;
                            memory[temp75 + 0x84:temp75 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                            memory[temp75 + 0xa4:temp75 + 0xa4 + 0x20] = !!arg6;
                            var0 = 0xc8b4fac621265059f2c4a025cdfed65efca6394a;
                            var1 = 0x21c4b64f;
                            var2 = temp75 + 0xc4;
                            goto label_1E74;
                        }
                    } else {
                    label_1ECE:
                        var temp76 = arg4;
                        var temp77 = memory[temp76 + 0x20:temp76 + 0x20 + 0x20];
                        var temp78 = memory[temp76:temp76 + 0x20];
                        var temp79 = memory[0x40:0x60];
                        memory[temp79:temp79 + 0x20] = 0x21c4b64f00000000000000000000000000000000000000000000000000000000;
                        memory[temp79 + 0x04:temp79 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                        memory[temp79 + 0x24:temp79 + 0x24 + 0x20] = arg0;
                        memory[temp79 + 0x44:temp79 + 0x44 + 0x20] = temp77 & 0xffffffffffffffffffffffffffffffffffffffff;
                        memory[temp79 + 0x64:temp79 + 0x64 + 0x20] = temp78 & 0xffffffffffffffffffffffffffffffffffffffff;
                        memory[temp79 + 0x84:temp79 + 0x84 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                        memory[temp79 + 0xa4:temp79 + 0xa4 + 0x20] = !!arg6;
                        var0 = 0x219b35f8e0f4e687f45379ea8eb2a3b92807fa42;
                        var1 = 0x21c4b64f;
                        var2 = temp79 + 0xc4;
                        goto label_1E74;
                    }
                } else if (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff != 0x29) { goto label_1F62; }
                else { goto label_1ECE; }
            } else {
            label_1DB5:
                var temp80 = arg4;
                var temp81 = memory[temp80 + 0x20:temp80 + 0x20 + 0x20];
                var temp82 = memory[temp80 + 0x80:temp80 + 0x80 + 0x20];
                var temp83 = memory[temp80:temp80 + 0x20];
                var temp84 = memory[temp80 + 0x60:temp80 + 0x60 + 0x20];
                var temp85 = memory[0x40:0x60];
                memory[temp85:temp85 + 0x20] = 0xe51ecf4700000000000000000000000000000000000000000000000000000000;
                memory[temp85 + 0x04:temp85 + 0x04 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp85 + 0x24:temp85 + 0x24 + 0x20] = arg0;
                memory[temp85 + 0x44:temp85 + 0x44 + 0x20] = arg1;
                memory[temp85 + 0x64:temp85 + 0x64 + 0x20] = temp81 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp85 + 0x84:temp85 + 0x84 + 0x20] = temp82 & 0xffff;
                memory[temp85 + 0xa4:temp85 + 0xa4 + 0x20] = temp83 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp85 + 0xc4:temp85 + 0xc4 + 0x20] = arg5 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp85 + 0xe4:temp85 + 0xe4 + 0x20] = !!arg6;
                memory[temp85 + 0x0104:temp85 + 0x0104 + 0x20] = temp84 & 0xffff;
                memory[temp85 + 0x0124:temp85 + 0x0124 + 0x20] = arg7 & 0xff;
                var0 = 0x455e43e76d0f57793bc76fdd5f0c33b10446be46;
                var1 = 0xe51ecf47;
                var2 = temp85 + 0x0144;
                var3 = 0x00;
                var4 = memory[0x40:0x60];
                var5 = var2 - var4;
                var6 = var4;
                var7 = var0;
                var8 = !address(var7).code.length;
            
                if (!var8) { goto label_1E8C; }
                else { revert(memory[0x00:0x00]); }
            }
        } else if (memory[arg4 + 0x40:arg4 + 0x40 + 0x20] & 0xffff != 0x35) { goto label_1EA9; }
        else { goto label_1DB5; }
    }
    
    function func_2B7C(var arg0) returns (var r0) {
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = 0x70a0823100000000000000000000000000000000000000000000000000000000;
        memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = address(this);
        var var0 = 0x00;
        var var1 = arg0 & 0xffffffffffffffffffffffffffffffffffffffff;
        var var2 = 0x70a08231;
        var var3 = temp0 + 0x24;
        var temp1 = memory[0x40:0x60];
        var temp2;
        temp2, memory[temp1:temp1 + 0x20] = address(var1).staticcall.gas(msg.gas)(memory[temp1:temp1 + var3 - temp1]);
        var var4 = !temp2;
    
        if (!var4) {
            var temp3 = memory[0x40:0x60];
            var temp4 = returndata.length;
            memory[0x40:0x60] = temp3 + (temp4 + 0x1f & ~0x1f);
            var1 = 0x2c0d;
            var3 = temp3;
            var2 = var3 + temp4;
            return func_567D(var2, var3);
        } else {
            var temp5 = returndata.length;
            memory[0x00:0x00 + temp5] = returndata[0x00:0x00 + temp5];
            revert(memory[0x00:0x00 + returndata.length]);
        }
    }
    
    function func_2FDF(var arg0) returns (var r0, var arg0, var r2) {
        r2 = 0x00;
        var var1 = r2;
        var var2 = var1;
        var var3 = 0x2fed;
        var var4 = arg0;
        var var5 = var2;
        var3 = func_3377(var4, var5);
        r2 = var3;
        var3 = 0x2ffa;
        var4 = arg0;
        var5 = 0x14;
        var3 = func_347B(var4, var5);
        var2 = var3;
        var3 = 0x3012;
        var4 = 0x300b;
        var5 = 0x03;
        var var6 = 0x14;
        var4 = func_5289(var5, var6);
        var3 = func_300B(arg0, var4);
        var temp0 = r2;
        r2 = var2;
        r0 = temp0;
        arg0 = var3;
        return r0, arg0, r2;
    }
    
    function func_300B(var arg0, var arg1) returns (var r0) {
        var temp0 = arg1;
        arg1 = arg0;
        var var0 = temp0;
        r0 = func_3377(arg1, var0);
        // Error: Could not resolve method call return address!
    }
    
    function func_301B(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {
        var var0 = 0x60;
        var var1 = arg4;
    
        if (var1 <= 0xffffffffffffffff) {
            var temp0 = memory[0x40:0x60];
            var temp1 = var1;
            var1 = temp0;
            var var2 = temp1;
            memory[var1:var1 + 0x20] = var2;
            memory[0x40:0x60] = var1 + var2 * 0x20 + 0x20;
        
            if (!var2) {
            label_307B:
                var0 = var1;
                var1 = 0x00;
            
                if (var1 >= arg4) { return var0; }
            
                var2 = 0x30bc;
                var var3 = arg0;
                var var4 = arg2;
                var var5 = arg1;
                var var6 = arg3;
                var var7 = arg4;
                var var8 = var1;
            
                if (var8 < var7) {
                    var2, var3 = func_30A1(var3, var4, var5, var6, var7, var8);
                    var4 = var0;
                    var5 = var1;
                
                    if (var5 < memory[var4:var4 + 0x20]) {
                        var4 = memory[var5 * 0x20 + 0x20 + var4:var5 * 0x20 + 0x20 + var4 + 0x20];
                        var5 = var0;
                        var6 = var1;
                    
                        if (var6 < memory[var5:var5 + 0x20]) {
                            memory[memory[var6 * 0x20 + 0x20 + var5:var6 * 0x20 + 0x20 + var5 + 0x20] + 0x20:memory[var6 * 0x20 + 0x20 + var5:var6 * 0x20 + 0x20 + var5 + 0x20] + 0x20 + 0x20] = !!var3;
                            memory[var4:var4 + 0x20] = var2;
                            var2 = var0;
                            var3 = var1;
                        
                            if (var3 < memory[var2:var2 + 0x20]) {
                                arg0 = memory[memory[var3 * 0x20 + 0x20 + var2:var3 * 0x20 + 0x20 + var2 + 0x20]:memory[var3 * 0x20 + 0x20 + var2:var3 * 0x20 + 0x20 + var2 + 0x20] + 0x20];
                            
                                if (0x00 - arg0) {
                                    var2 = arg3;
                                    var3 = arg4;
                                    var4 = var1;
                                
                                    if (var4 < var3) {
                                        var temp2 = var4 * 0xa0 + var2 + 0x20;
                                        var temp3 = temp2 + 0x20;
                                        var2 = 0x31b8;
                                        var3 = temp3;
                                        var4 = temp2;
                                        var5 = 0x00;
                                    
                                        if (var3 - var4 i< 0x20) { revert(memory[0x00:0x00]); }
                                    
                                        var6 = msg.data[var4:var4 + 0x20];
                                        var7 = 0x5331;
                                        var8 = var6;
                                        func_4D2B(var8);
                                        var2 = var6;
                                        // Error: Could not resolve jump destination!
                                    } else {
                                        var5 = 0x31a0;
                                    
                                    label_51DC:
                                        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
                                        memory[0x04:0x24] = 0x32;
                                        revert(memory[0x00:0x24]);
                                    }
                                } else {
                                    var temp4 = memory[0x40:0x60];
                                    memory[temp4:temp4 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
                                    memory[temp4 + 0x04:temp4 + 0x04 + 0x20] = 0x20;
                                    memory[temp4 + 0x24:temp4 + 0x24 + 0x20] = 0x10;
                                    memory[temp4 + 0x44:temp4 + 0x44 + 0x20] = 0x63616e206e6f742072756e207061746800000000000000000000000000000000;
                                    var2 = temp4 + 0x64;
                                    var temp5 = memory[0x40:0x60];
                                    revert(memory[temp5:temp5 + var2 - temp5]);
                                }
                            } else {
                                var4 = 0x3116;
                                goto label_51DC;
                            }
                        } else {
                            var7 = 0x30eb;
                            goto label_51DC;
                        }
                    } else {
                        var6 = 0x30ce;
                        goto label_51DC;
                    }
                } else {
                    var var9 = 0x30a1;
                    goto label_51DC;
                }
            } else {
                var temp6 = var1 + 0x20;
                var temp7 = memory[0x40:0x60];
                memory[0x40:0x60] = temp7 + 0x40;
                memory[temp7:temp7 + 0x20] = 0x00;
                memory[temp7 + 0x20:temp7 + 0x20 + 0x20] = 0x00;
                memory[temp6:temp6 + 0x20] = temp7;
                var2 = var2 - 0x01;
                var3 = temp6 + 0x20;
            
                if (!var2) { goto label_3079; }
            
            label_3054:
                var temp8 = memory[0x40:0x60];
                memory[0x40:0x60] = temp8 + 0x40;
                memory[temp8:temp8 + 0x20] = 0x00;
                memory[temp8 + 0x20:temp8 + 0x20 + 0x20] = 0x00;
                var temp9 = var3;
                memory[temp9:temp9 + 0x20] = temp8;
                var2 = var2 - 0x01;
                var3 = temp9 + 0x20;
            
                if (var2) { goto label_3054; }
            
            label_3079:
                var2 = var3;
                goto label_307B;
            }
        } else {
            var2 = 0x3036;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_30A1(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5) returns (var r0, var arg0) {
        var temp0 = arg5 * 0xa0 + arg3;
        arg3 = 0x30b7;
        arg4 = temp0 + (msg.data.length - temp0);
        arg5 = temp0;
        arg3 = func_56B3(arg4, arg5);
        arg4 = 0x00;
        arg5 = arg4;
        var var0 = 0x357e;
        var var1 = arg0;
        var var2 = arg1;
        var var3 = arg2;
        var var4 = arg3;
        var0, var1 = func_36F0(var1, var2, var3, var4);
        arg5 = var1;
        arg4 = var0;
        arg0 = arg5;
        r0 = arg4;
        return r0, arg0;
    }
    
    function func_3377(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var var1 = arg1;
        var var2 = 0x3385;
        var var3 = var1;
        var var4 = 0x14;
        var2 = func_5289(var3, var4);
    
        if (var2 >= var1) {
            var1 = 0x33f8;
            var2 = arg1;
            var3 = 0x14;
            var1 = func_5289(var2, var3);
        
            if (memory[arg0:arg0 + 0x20] >= var1) { return memory[arg1 + arg0 + 0x20:arg1 + arg0 + 0x20 + 0x20] / 0x01000000000000000000000000; }
        
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;
            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x15;
            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x746f416464726573735f6f75744f66426f756e64730000000000000000000000;
            var1 = temp0 + 0x64;
        
        label_0161:
            var temp1 = memory[0x40:0x60];
            revert(memory[temp1:temp1 + var1 - temp1]);
        } else {
            var temp2 = memory[0x40:0x60];
            memory[temp2:temp2 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = 0x20;
            memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = 0x12;
            memory[temp2 + 0x44:temp2 + 0x44 + 0x20] = 0x746f416464726573735f6f766572666c6f770000000000000000000000000000;
            var1 = temp2 + 0x64;
            goto label_0161;
        }
    }
    
    function func_347B(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var var1 = arg1;
        var var2 = 0x3489;
        var var3 = var1;
        var var4 = 0x03;
        var2 = func_5289(var3, var4);
    
        if (var2 >= var1) {
            var1 = 0x34fc;
            var2 = arg1;
            var3 = 0x03;
            var1 = func_5289(var2, var3);
        
            if (memory[arg0:arg0 + 0x20] >= var1) { return memory[arg1 + arg0 + 0x03:arg1 + arg0 + 0x03 + 0x20]; }
        
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp0 + 0x04:temp0 + 0x04 + 0x20] = 0x20;
            memory[temp0 + 0x24:temp0 + 0x24 + 0x20] = 0x14;
            memory[temp0 + 0x44:temp0 + 0x44 + 0x20] = 0x746f55696e7432345f6f75744f66426f756e6473000000000000000000000000;
            var1 = temp0 + 0x64;
        
        label_0161:
            var temp1 = memory[0x40:0x60];
            revert(memory[temp1:temp1 + var1 - temp1]);
        } else {
            var temp2 = memory[0x40:0x60];
            memory[temp2:temp2 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            memory[temp2 + 0x04:temp2 + 0x04 + 0x20] = 0x20;
            memory[temp2 + 0x24:temp2 + 0x24 + 0x20] = 0x11;
            memory[temp2 + 0x44:temp2 + 0x44 + 0x20] = 0x746f55696e7432345f6f766572666c6f77000000000000000000000000000000;
            var1 = temp2 + 0x64;
            goto label_0161;
        }
    }
    
    function func_36F0(var arg0, var arg1, var arg2, var arg3) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
        var var2 = memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff == 0x00;
    
        if (var2) {
            if (!var2) {
            label_37FD:
            
                if (!(0x03 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp90 = arg3;
                    var temp91 = memory[temp90 + 0x20:temp90 + 0x20 + 0x20];
                    var temp92 = memory[temp90:temp90 + 0x20];
                    var temp93 = memory[temp90 + 0x80:temp90 + 0x80 + 0x20];
                    var temp94 = memory[0x40:0x60];
                    memory[temp94:temp94 + 0x20] = 0xd32f383400000000000000000000000000000000000000000000000000000000;
                    memory[temp94 + 0x04:temp94 + 0x04 + 0x20] = arg0;
                    memory[temp94 + 0x24:temp94 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp94 + 0x44:temp94 + 0x44 + 0x20] = temp91 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp94 + 0x64:temp94 + 0x64 + 0x20] = temp92 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp94 + 0x84:temp94 + 0x84 + 0x20] = arg2 & 0xffff;
                    memory[temp94 + 0xa4:temp94 + 0xa4 + 0x20] = temp93 & 0xffff;
                    var2 = 0x219b35f8e0f4e687f45379ea8eb2a3b92807fa42;
                    var3 = 0xd32f3834;
                    var4 = temp94 + 0xc4;
                    goto label_37B4;
                } else if (!(0x07 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp86 = arg3;
                    var temp87 = memory[temp86 + 0x20:temp86 + 0x20 + 0x20];
                    var temp88 = memory[temp86:temp86 + 0x20];
                    var temp89 = memory[0x40:0x60];
                    memory[temp89:temp89 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp89 + 0x04:temp89 + 0x04 + 0x20] = arg0;
                    memory[temp89 + 0x24:temp89 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp89 + 0x44:temp89 + 0x44 + 0x20] = temp87 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp89 + 0x64:temp89 + 0x64 + 0x20] = temp88 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0xc8b4fac621265059f2c4a025cdfed65efca6394a;
                    var3 = 0xc4dc5ff7;
                    var4 = temp89 + 0x84;
                    goto label_37B4;
                } else if (!(0x09 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp82 = arg3;
                    var temp83 = memory[temp82 + 0x20:temp82 + 0x20 + 0x20];
                    var temp84 = memory[temp82:temp82 + 0x20];
                    var temp85 = memory[0x40:0x60];
                    memory[temp85:temp85 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp85 + 0x04:temp85 + 0x04 + 0x20] = arg0;
                    memory[temp85 + 0x24:temp85 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp85 + 0x44:temp85 + 0x44 + 0x20] = temp83 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp85 + 0x64:temp85 + 0x64 + 0x20] = temp84 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0x91577662ba4b2639b06bd38b725d77fdcc1bcca9;
                    var3 = 0xc4dc5ff7;
                    var4 = temp85 + 0x84;
                    goto label_37B4;
                } else if (!(0x0a - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp77 = arg3;
                    var temp78 = memory[temp77 + 0x20:temp77 + 0x20 + 0x20];
                    var temp79 = memory[temp77:temp77 + 0x20];
                    var temp80 = memory[temp77 + 0x80:temp77 + 0x80 + 0x20];
                    var temp81 = memory[0x40:0x60];
                    memory[temp81:temp81 + 0x20] = 0xb6952f2500000000000000000000000000000000000000000000000000000000;
                    memory[temp81 + 0x04:temp81 + 0x04 + 0x20] = arg0;
                    memory[temp81 + 0x24:temp81 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp81 + 0x44:temp81 + 0x44 + 0x20] = temp78 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp81 + 0x64:temp81 + 0x64 + 0x20] = temp79 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp81 + 0x84:temp81 + 0x84 + 0x20] = arg2 & 0xffff;
                    memory[temp81 + 0xa4:temp81 + 0xa4 + 0x20] = temp80 & 0xffff;
                    var2 = 0x3696dc128d00eb1211a29219ecb88539e88b8f28;
                    var3 = 0xb6952f25;
                    var4 = temp81 + 0xc4;
                    goto label_37B4;
                } else if (!(0x0b - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp72 = arg3;
                    var temp73 = memory[temp72 + 0x20:temp72 + 0x20 + 0x20];
                    var temp74 = memory[temp72:temp72 + 0x20];
                    var temp75 = memory[temp72 + 0x80:temp72 + 0x80 + 0x20];
                    var temp76 = memory[0x40:0x60];
                    memory[temp76:temp76 + 0x20] = 0x8cddce6300000000000000000000000000000000000000000000000000000000;
                    memory[temp76 + 0x04:temp76 + 0x04 + 0x20] = arg0;
                    memory[temp76 + 0x24:temp76 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp76 + 0x44:temp76 + 0x44 + 0x20] = temp73 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp76 + 0x64:temp76 + 0x64 + 0x20] = temp74 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp76 + 0x84:temp76 + 0x84 + 0x20] = temp75 & 0xffff;
                    var2 = 0x7df709fe491301a01a5176ef0436e3776c9d3b96;
                    var3 = 0x8cddce63;
                    var4 = temp76 + 0xa4;
                    goto label_37B4;
                } else if (!(0x0d - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp70 = memory[arg3:arg3 + 0x20];
                    var temp71 = memory[0x40:0x60];
                    memory[temp71:temp71 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp71 + 0x04:temp71 + 0x04 + 0x20] = arg0;
                    memory[temp71 + 0x24:temp71 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp71 + 0x44:temp71 + 0x44 + 0x20] = temp70 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp71 + 0x64:temp71 + 0x64 + 0x20] = 0x8f8dd7db1bda5ed3da8c9daf3bfa471c12d58486;
                    var2 = 0xad87636701d6bedbbf82c028492582cd5a4e374b;
                    var3 = 0xc4dc5ff7;
                    var4 = temp71 + 0x84;
                    goto label_37B4;
                } else if (!(0x0f - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp64 = arg3;
                    var temp65 = memory[temp64 + 0x20:temp64 + 0x20 + 0x20];
                    var temp66 = memory[temp64:temp64 + 0x20];
                    var temp67 = memory[temp64 + 0x60:temp64 + 0x60 + 0x20];
                    var temp68 = memory[temp64 + 0x80:temp64 + 0x80 + 0x20];
                    var temp69 = memory[0x40:0x60];
                    memory[temp69:temp69 + 0x20] = 0xb6952f2500000000000000000000000000000000000000000000000000000000;
                    memory[temp69 + 0x04:temp69 + 0x04 + 0x20] = arg0;
                    memory[temp69 + 0x24:temp69 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp69 + 0x44:temp69 + 0x44 + 0x20] = temp65 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp69 + 0x64:temp69 + 0x64 + 0x20] = temp66 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp69 + 0x84:temp69 + 0x84 + 0x20] = temp67 & 0xffff;
                    memory[temp69 + 0xa4:temp69 + 0xa4 + 0x20] = temp68 & 0xffff;
                    var2 = 0xeb556ddc5ce9d91a438837a1eb5c320cc5b73b82;
                    var3 = 0xb6952f25;
                    var4 = temp69 + 0xc4;
                    goto label_37B4;
                } else if (!(0x1a - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var0 = arg0;
                    var1 = 0x00;
                    goto label_3583;
                } else if (!(0x23 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp59 = arg3;
                    var temp60 = memory[temp59 + 0x20:temp59 + 0x20 + 0x20];
                    var temp61 = memory[temp59:temp59 + 0x20];
                    var temp62 = memory[temp59 + 0x60:temp59 + 0x60 + 0x20];
                    var temp63 = memory[0x40:0x60];
                    memory[temp63:temp63 + 0x20] = 0xec4e02ae00000000000000000000000000000000000000000000000000000000;
                    memory[temp63 + 0x04:temp63 + 0x04 + 0x20] = arg0;
                    memory[temp63 + 0x24:temp63 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp63 + 0x44:temp63 + 0x44 + 0x20] = temp60 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp63 + 0x64:temp63 + 0x64 + 0x20] = temp61 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp63 + 0x84:temp63 + 0x84 + 0x20] = temp62 & 0xffff;
                    var2 = 0x9c942459efb9d84fc8ee5a0dc7da04f4f296fec3;
                    var3 = 0xec4e02ae;
                    var4 = temp63 + 0xa4;
                    goto label_37B4;
                } else if (!(0x24 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp54 = arg3;
                    var temp55 = memory[temp54 + 0x20:temp54 + 0x20 + 0x20];
                    var temp56 = memory[temp54:temp54 + 0x20];
                    var temp57 = memory[temp54 + 0x60:temp54 + 0x60 + 0x20];
                    var temp58 = memory[0x40:0x60];
                    memory[temp58:temp58 + 0x20] = 0x661f678400000000000000000000000000000000000000000000000000000000;
                    memory[temp58 + 0x04:temp58 + 0x04 + 0x20] = 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c;
                    memory[temp58 + 0x24:temp58 + 0x24 + 0x20] = arg0;
                    memory[temp58 + 0x44:temp58 + 0x44 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp58 + 0x64:temp58 + 0x64 + 0x20] = temp55 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp58 + 0x84:temp58 + 0x84 + 0x20] = temp56 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp58 + 0xa4:temp58 + 0xa4 + 0x20] = temp57 & 0xffff;
                    var2 = 0x2479a86f9f692aa25c769fcb11084a39a4ba3f2e;
                    var3 = 0x661f6784;
                    var4 = temp58 + 0xc4;
                    goto label_37B4;
                } else if (!(0x25 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp52 = memory[arg3:arg3 + 0x20];
                    var temp53 = memory[0x40:0x60];
                    memory[temp53:temp53 + 0x20] = 0x5d28692c00000000000000000000000000000000000000000000000000000000;
                    memory[temp53 + 0x04:temp53 + 0x04 + 0x20] = arg0;
                    memory[temp53 + 0x24:temp53 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp53 + 0x44:temp53 + 0x44 + 0x20] = temp52 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0x85dfbd2d289f545f3dd6d58db6b71ae032f019f8;
                    var3 = 0x5d28692c;
                    var4 = temp53 + 0x64;
                    goto label_37B4;
                } else if (!(0x27 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp48 = arg3;
                    var temp49 = memory[temp48 + 0x20:temp48 + 0x20 + 0x20];
                    var temp50 = memory[temp48:temp48 + 0x20];
                    var temp51 = memory[0x40:0x60];
                    memory[temp51:temp51 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp51 + 0x04:temp51 + 0x04 + 0x20] = arg0;
                    memory[temp51 + 0x24:temp51 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp51 + 0x44:temp51 + 0x44 + 0x20] = temp49 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp51 + 0x64:temp51 + 0x64 + 0x20] = temp50 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0xbae6875692011c62681ae0d2c81f892ac1c57c75;
                    var3 = 0xc4dc5ff7;
                    var4 = temp51 + 0x84;
                    goto label_37B4;
                } else if (!(0x29 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp43 = arg3;
                    var temp44 = memory[temp43 + 0x20:temp43 + 0x20 + 0x20];
                    var temp45 = memory[temp43:temp43 + 0x20];
                    var temp46 = memory[temp43 + 0x80:temp43 + 0x80 + 0x20];
                    var temp47 = memory[0x40:0x60];
                    memory[temp47:temp47 + 0x20] = 0xd32f383400000000000000000000000000000000000000000000000000000000;
                    memory[temp47 + 0x04:temp47 + 0x04 + 0x20] = arg0;
                    memory[temp47 + 0x24:temp47 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp47 + 0x44:temp47 + 0x44 + 0x20] = temp44 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp47 + 0x64:temp47 + 0x64 + 0x20] = temp45 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp47 + 0x84:temp47 + 0x84 + 0x20] = arg2 & 0xffff;
                    memory[temp47 + 0xa4:temp47 + 0xa4 + 0x20] = temp46 & 0xffff;
                    var2 = 0x864f107761a6fa182c99e3afbb0a7263b58ad36f;
                    var3 = 0xd32f3834;
                    var4 = temp47 + 0xc4;
                    goto label_37B4;
                } else if (!(0x2b - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp39 = arg3;
                    var temp40 = memory[temp39 + 0x20:temp39 + 0x20 + 0x20];
                    var temp41 = memory[temp39:temp39 + 0x20];
                    var temp42 = memory[0x40:0x60];
                    memory[temp42:temp42 + 0x20] = 0xf2ed734c00000000000000000000000000000000000000000000000000000000;
                    memory[temp42 + 0x04:temp42 + 0x04 + 0x20] = arg0;
                    memory[temp42 + 0x24:temp42 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp42 + 0x44:temp42 + 0x44 + 0x20] = temp40 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp42 + 0x64:temp42 + 0x64 + 0x20] = temp41 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0xbae6875692011c62681ae0d2c81f892ac1c57c75;
                    var3 = 0xf2ed734c;
                    var4 = temp42 + 0x84;
                    goto label_37B4;
                } else if (!(0x2f - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp35 = arg3;
                    var temp36 = memory[temp35:temp35 + 0x20];
                    var temp37 = memory[temp35 + 0x80:temp35 + 0x80 + 0x20];
                    var temp38 = memory[0x40:0x60];
                    memory[temp38:temp38 + 0x20] = 0x659ad18400000000000000000000000000000000000000000000000000000000;
                    memory[temp38 + 0x04:temp38 + 0x04 + 0x20] = arg0;
                    memory[temp38 + 0x24:temp38 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp38 + 0x44:temp38 + 0x44 + 0x20] = temp36 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp38 + 0x64:temp38 + 0x64 + 0x20] = arg2 & 0xffff;
                    memory[temp38 + 0x84:temp38 + 0x84 + 0x20] = temp37 & 0xffff;
                    var2 = 0x8d12dab782b183d032c22b6aeb9e3bc74737f247;
                    var3 = 0x659ad184;
                    var4 = temp38 + 0xa4;
                    goto label_37B4;
                } else if (!(0x31 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp29 = arg3;
                    var temp30 = memory[temp29 + 0x20:temp29 + 0x20 + 0x20];
                    var temp31 = memory[temp29:temp29 + 0x20];
                    var temp32 = memory[temp29 + 0x60:temp29 + 0x60 + 0x20];
                    var temp33 = memory[temp29 + 0x80:temp29 + 0x80 + 0x20];
                    var temp34 = memory[0x40:0x60];
                    memory[temp34:temp34 + 0x20] = 0xf789530f00000000000000000000000000000000000000000000000000000000;
                    memory[temp34 + 0x04:temp34 + 0x04 + 0x20] = arg0;
                    memory[temp34 + 0x24:temp34 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp34 + 0x44:temp34 + 0x44 + 0x20] = temp30 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp34 + 0x64:temp34 + 0x64 + 0x20] = temp31 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp34 + 0x84:temp34 + 0x84 + 0x20] = temp32 & 0xffff;
                    memory[temp34 + 0xa4:temp34 + 0xa4 + 0x20] = 0xb4315e873dbcf96ffd0acd8ea43f689d8c20fb30;
                    memory[temp34 + 0xc4:temp34 + 0xc4 + 0x20] = temp33 & 0xffff;
                    var2 = 0x6ceb8776864d47d397496bcd278cd2e97b86a5f9;
                    var3 = 0xf789530f;
                    var4 = temp34 + 0xe4;
                    goto label_37B4;
                } else if (!(0x33 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp25 = arg3;
                    var temp26 = memory[temp25 + 0x20:temp25 + 0x20 + 0x20];
                    var temp27 = memory[temp25:temp25 + 0x20];
                    var temp28 = memory[0x40:0x60];
                    memory[temp28:temp28 + 0x20] = 0xd0c398af00000000000000000000000000000000000000000000000000000000;
                    memory[temp28 + 0x04:temp28 + 0x04 + 0x20] = arg0;
                    memory[temp28 + 0x24:temp28 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp28 + 0x44:temp28 + 0x44 + 0x20] = temp26 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp28 + 0x64:temp28 + 0x64 + 0x20] = temp27 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0x91577662ba4b2639b06bd38b725d77fdcc1bcca9;
                    var3 = 0xd0c398af;
                    var4 = temp28 + 0x84;
                    goto label_37B4;
                } else if (!(0x34 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp21 = arg3;
                    var temp22 = memory[temp21 + 0x20:temp21 + 0x20 + 0x20];
                    var temp23 = memory[temp21:temp21 + 0x20];
                    var temp24 = memory[0x40:0x60];
                    memory[temp24:temp24 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp24 + 0x04:temp24 + 0x04 + 0x20] = arg0;
                    memory[temp24 + 0x24:temp24 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp24 + 0x44:temp24 + 0x44 + 0x20] = temp22 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp24 + 0x64:temp24 + 0x64 + 0x20] = temp23 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0x4bd6a64b1174515a9cd2eb6d62fc345167fdf394;
                    var3 = 0xc4dc5ff7;
                    var4 = temp24 + 0x84;
                    goto label_37B4;
                } else if (!(0x35 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp15 = arg3;
                    var temp16 = memory[temp15 + 0x20:temp15 + 0x20 + 0x20];
                    var temp17 = memory[temp15:temp15 + 0x20];
                    var temp18 = memory[temp15 + 0x60:temp15 + 0x60 + 0x20];
                    var temp19 = memory[temp15 + 0x80:temp15 + 0x80 + 0x20];
                    var temp20 = memory[0x40:0x60];
                    memory[temp20:temp20 + 0x20] = 0x5525c0a200000000000000000000000000000000000000000000000000000000;
                    memory[temp20 + 0x04:temp20 + 0x04 + 0x20] = arg0;
                    memory[temp20 + 0x24:temp20 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp20 + 0x44:temp20 + 0x44 + 0x20] = temp16 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp20 + 0x64:temp20 + 0x64 + 0x20] = temp17 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp20 + 0x84:temp20 + 0x84 + 0x20] = temp18 & 0xffff;
                    memory[temp20 + 0xa4:temp20 + 0xa4 + 0x20] = temp19 & 0xffff;
                    var2 = 0x455e43e76d0f57793bc76fdd5f0c33b10446be46;
                    var3 = 0x5525c0a2;
                    var4 = temp20 + 0xc4;
                    goto label_37B4;
                } else if (!(0x36 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff))) {
                    var temp11 = arg3;
                    var temp12 = memory[temp11 + 0x20:temp11 + 0x20 + 0x20];
                    var temp13 = memory[temp11:temp11 + 0x20];
                    var temp14 = memory[0x40:0x60];
                    memory[temp14:temp14 + 0x20] = 0xc4dc5ff700000000000000000000000000000000000000000000000000000000;
                    memory[temp14 + 0x04:temp14 + 0x04 + 0x20] = arg0;
                    memory[temp14 + 0x24:temp14 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp14 + 0x44:temp14 + 0x44 + 0x20] = temp12 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp14 + 0x64:temp14 + 0x64 + 0x20] = temp13 & 0xffffffffffffffffffffffffffffffffffffffff;
                    var2 = 0xc3730c00d6e13c2a9286851da01cd68133c545f8;
                    var3 = 0xc4dc5ff7;
                    var4 = temp14 + 0x84;
                    goto label_37B4;
                } else if (0x37 - (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff)) {
                    var temp0 = memory[0x40:0x60];
                    memory[temp0:temp0 + 0x20] = 0x4de5b3cf00000000000000000000000000000000000000000000000000000000;
                    var2 = 0xd694d836721a1e0474867909688244d018f157bf;
                    var var3 = 0x4de5b3cf;
                    var var4 = 0x37b4;
                    var var5 = arg0;
                    var var6 = arg1;
                    var var7 = arg2;
                    var var8 = arg3;
                    var var9 = temp0 + 0x04;
                    var4 = func_58BC(var5, var6, var7, var8, var9);
                
                label_37B4:
                    var temp1 = memory[0x40:0x60];
                    var temp2;
                    temp2, memory[temp1:temp1 + 0x40] = address(var2).delegatecall.gas(msg.gas)(memory[temp1:temp1 + var4 - temp1]);
                    var5 = !temp2;
                
                    if (!var5) {
                    label_37D0:
                        var temp3 = memory[0x40:0x60];
                        var temp4 = returndata.length;
                        memory[0x40:0x60] = temp3 + (temp4 + 0x1f & ~0x1f);
                        var2 = 0x37f4;
                        var3 = temp3 + temp4;
                        var4 = temp3;
                        var2, var3 = func_588C(var3, var4);
                        var1 = var3;
                        var0 = var2;
                    
                    label_3583:
                        arg0 = var1;
                        r0 = var0;
                        return r0, arg0;
                    } else {
                    label_37C7:
                        var temp5 = returndata.length;
                        memory[0x00:0x00 + temp5] = returndata[0x00:0x00 + temp5];
                        revert(memory[0x00:0x00 + returndata.length]);
                    }
                } else {
                    var temp6 = arg3;
                    var temp7 = memory[temp6 + 0x20:temp6 + 0x20 + 0x20];
                    var temp8 = memory[temp6:temp6 + 0x20];
                    var temp9 = memory[temp6 + 0x80:temp6 + 0x80 + 0x20];
                    var temp10 = memory[0x40:0x60];
                    memory[temp10:temp10 + 0x20] = 0x0737e98400000000000000000000000000000000000000000000000000000000;
                    memory[temp10 + 0x04:temp10 + 0x04 + 0x20] = arg0;
                    memory[temp10 + 0x24:temp10 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp10 + 0x44:temp10 + 0x44 + 0x20] = temp7 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp10 + 0x64:temp10 + 0x64 + 0x20] = temp8 & 0xffffffffffffffffffffffffffffffffffffffff;
                    memory[temp10 + 0x84:temp10 + 0x84 + 0x20] = 0x651269d85480a9c2163b3ea9850b3258c86f8c29;
                    memory[temp10 + 0xa4:temp10 + 0xa4 + 0x20] = arg2 & 0xffff;
                    memory[temp10 + 0xc4:temp10 + 0xc4 + 0x20] = temp9 & 0xffff;
                    var2 = 0x75477373702bc8cc710ea4ba88e05e71daab0f05;
                    var3 = 0x0737e984;
                    var4 = temp10 + 0xe4;
                    goto label_37B4;
                }
            } else {
            label_3718:
                var temp95 = arg3;
                var temp96 = memory[temp95 + 0x20:temp95 + 0x20 + 0x20];
                var temp97 = memory[temp95:temp95 + 0x20];
                var temp98 = memory[temp95 + 0x60:temp95 + 0x60 + 0x20];
                var temp99 = memory[temp95 + 0x80:temp95 + 0x80 + 0x20];
                var temp100 = memory[0x40:0x60];
                memory[temp100:temp100 + 0x20] = 0xb6952f2500000000000000000000000000000000000000000000000000000000;
                memory[temp100 + 0x04:temp100 + 0x04 + 0x20] = arg0;
                memory[temp100 + 0x24:temp100 + 0x24 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp100 + 0x44:temp100 + 0x44 + 0x20] = temp96 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp100 + 0x64:temp100 + 0x64 + 0x20] = temp97 & 0xffffffffffffffffffffffffffffffffffffffff;
                memory[temp100 + 0x84:temp100 + 0x84 + 0x20] = temp98 & 0xffff;
                memory[temp100 + 0xa4:temp100 + 0xa4 + 0x20] = temp99 & 0xffff;
                var2 = 0x455e43e76d0f57793bc76fdd5f0c33b10446be46;
                var3 = 0xb6952f25;
                var4 = temp100 + 0xc4;
                var temp101 = memory[0x40:0x60];
                var temp102;
                temp102, memory[temp101:temp101 + 0x40] = address(var2).delegatecall.gas(msg.gas)(memory[temp101:temp101 + var4 - temp101]);
                var5 = !temp102;
            
                if (!var5) { goto label_37D0; }
                else { goto label_37C7; }
            }
        } else if (memory[arg3 + 0x40:arg3 + 0x40 + 0x20] & 0xffff != 0x2c) { goto label_37FD; }
        else { goto label_3718; }
    }
    
    function func_4A79(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var1 = msg.data[arg1:arg1 + 0x20];
    
        if (var1 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        var0 = temp0 + 0x20;
    
        if (temp0 + var1 + 0x20 > arg0) { revert(memory[0x00:0x00]); }
    
        arg0 = var1;
        r0 = var0;
        return r0, arg0;
    }
    
    function func_4AC2(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3) {
        r3 = 0x00;
        var var1 = r3;
        var var2 = 0x00;
        var var3 = var2;
    
        if (arg0 - arg1 i< 0x60) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        r3 = msg.data[temp0:temp0 + 0x20];
        var1 = msg.data[temp0 + 0x20:temp0 + 0x20 + 0x20];
        var var4 = msg.data[temp0 + 0x40:temp0 + 0x40 + 0x20];
    
        if (var4 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var var5 = 0x4b09;
        var var6 = arg0;
        var var7 = arg1 + var4;
        var5, var6 = func_4A79(var6, var7);
        var temp1 = r3;
        r3 = var6;
        r0 = temp1;
        arg0 = var1;
        arg1 = var5;
        return r0, arg0, arg1, r3;
    }
    
    function func_4B15(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i>= 0x20) { return msg.data[arg1:arg1 + 0x20]; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4B2E(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var1 = msg.data[arg1:arg1 + 0x20];
    
        if (var1 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        var0 = temp0 + 0x20;
    
        if (temp0 + (var1 << 0x05) + 0x20 > arg0) { revert(memory[0x00:0x00]); }
    
        arg0 = var1;
        r0 = var0;
        return r0, arg0;
    }
    
    function func_4B73(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3, var r4, var r5, var r6, var r7, var r8) {
        r3 = 0x00;
        r4 = r3;
        r5 = 0x00;
        r6 = r5;
        r7 = 0x00;
        r8 = r7;
        var var6 = 0x00;
        var var7 = var6;
        var var8 = 0x00;
    
        if (arg0 - arg1 i< 0xa0) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        r3 = msg.data[temp0:temp0 + 0x20];
        var var9 = msg.data[temp0 + 0x20:temp0 + 0x20 + 0x20];
        var var10 = 0xffffffffffffffff;
    
        if (var9 > var10) { revert(memory[0x00:0x00]); }
    
        var var11 = 0x4bbc;
        var var12 = arg0;
        var var13 = arg1 + var9;
        var11, var12 = func_4B2E(var12, var13);
        r4 = var11;
        r5 = var12;
        var9 = msg.data[arg1 + 0x40:arg1 + 0x40 + 0x20];
    
        if (var9 > var10) { revert(memory[0x00:0x00]); }
    
        var11 = 0x4be1;
        var12 = arg0;
        var13 = arg1 + var9;
        var11, var12 = func_4B2E(var12, var13);
        r6 = var11;
        r7 = var12;
        var9 = msg.data[arg1 + 0x60:arg1 + 0x60 + 0x20];
    
        if (var9 > var10) { revert(memory[0x00:0x00]); }
    
        var11 = 0x4c06;
        var12 = arg0;
        var13 = arg1 + var9;
        var11, var12 = func_4B2E(var12, var13);
        r8 = var11;
        var6 = var12;
        var9 = msg.data[arg1 + 0x80:arg1 + 0x80 + 0x20];
    
        if (var9 > var10) { revert(memory[0x00:0x00]); }
    
        var10 = 0x4c2c;
        var11 = arg0;
        var12 = arg1 + var9;
        var10, var11 = func_4B2E(var11, var12);
        var temp1 = r8;
        r8 = var11;
        var temp2 = r5;
        r5 = temp1;
        arg1 = temp2;
        var temp3 = r7;
        r7 = var10;
        var temp4 = r4;
        r4 = temp3;
        arg0 = temp4;
        var temp5 = r6;
        r6 = var6;
        var temp6 = r3;
        r3 = temp5;
        r0 = temp6;
        return r0, arg0, arg1, r3, r4, r5, r6, r7, r8;
    }
    
    function func_4C43(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3, var r4, var r5, var r6, var r7, var r8, var r9, var r10) {
        r3 = 0x00;
        r4 = r3;
        r5 = 0x00;
        r6 = r5;
        r7 = 0x00;
        r8 = r7;
        r9 = 0x00;
        r10 = r9;
        var var8 = 0x00;
        var var9 = var8;
        var var10 = 0x00;
    
        if (arg0 - arg1 i< 0xe0) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        r3 = msg.data[temp0:temp0 + 0x20];
        r4 = msg.data[temp0 + 0x20:temp0 + 0x20 + 0x20];
        r5 = msg.data[temp0 + 0x40:temp0 + 0x40 + 0x20];
        var var11 = 0xffffffffffffffff;
    
        if (msg.data[temp0 + 0x60:temp0 + 0x60 + 0x20] > var11) { revert(memory[0x00:0x00]); }
    
        var var12 = 0x4ca0;
        var var13 = arg0;
        var temp1 = arg1;
        var var14 = temp1 + msg.data[temp1 + 0x60:temp1 + 0x60 + 0x20];
        var12, var13 = func_4B2E(var13, var14);
        r6 = var12;
        r7 = var13;
    
        if (var11 < msg.data[arg1 + 0x80:arg1 + 0x80 + 0x20]) { revert(memory[0x00:0x00]); }
    
        var12 = 0x4cc6;
        var13 = arg0;
        var temp2 = arg1;
        var14 = temp2 + msg.data[temp2 + 0x80:temp2 + 0x80 + 0x20];
        var12, var13 = func_4B2E(var13, var14);
        r8 = var12;
        r9 = var13;
    
        if (var11 < msg.data[arg1 + 0xa0:arg1 + 0xa0 + 0x20]) { revert(memory[0x00:0x00]); }
    
        var12 = 0x4cec;
        var13 = arg0;
        var temp3 = arg1;
        var14 = temp3 + msg.data[temp3 + 0xa0:temp3 + 0xa0 + 0x20];
        var12, var13 = func_4B2E(var13, var14);
        r10 = var12;
        var8 = var13;
    
        if (var11 < msg.data[arg1 + 0xc0:arg1 + 0xc0 + 0x20]) { revert(memory[0x00:0x00]); }
    
        var11 = 0x4d13;
        var12 = arg0;
        var temp4 = arg1;
        var13 = temp4 + msg.data[temp4 + 0xc0:temp4 + 0xc0 + 0x20];
        var11, var12 = func_4B2E(var12, var13);
        var temp5 = r10;
        r10 = var12;
        var temp6 = r7;
        r7 = temp5;
        var temp7 = r4;
        r4 = temp6;
        arg0 = temp7;
        var temp8 = r9;
        r9 = var11;
        var temp9 = r6;
        r6 = temp8;
        var temp10 = r3;
        r3 = temp9;
        r0 = temp10;
        var temp11 = r8;
        r8 = var8;
        var temp12 = r5;
        r5 = temp11;
        arg1 = temp12;
        return r0, arg0, arg1, r3, r4, r5, r6, r7, r8, r9, r10;
    }
    
    function func_4D2B(var arg0) {
        var temp0 = arg0;
    
        if (temp0 == temp0 & 0xffffffffffffffffffffffffffffffffffffffff) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4D50(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }
    
        var var2 = msg.data[arg1:arg1 + 0x20];
        var var3 = 0x4d6e;
        var var4 = var2;
        func_4D2B(var4);
        r0 = var2;
        arg0 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];
        return r0, arg0;
    }
    
    function func_4DAB() returns (var r0) {
        var temp0 = memory[0x40:0x60];
        var var0 = temp0;
        var temp1 = var0 + 0x40;
        var var1 = temp1;
    
        if (!((var1 < var0) | (var1 > 0xffffffffffffffff))) {
            memory[0x40:0x60] = var1;
            return var0;
        } else {
            var var2 = 0x4dce;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_4DD4() returns (var r0) {
        var temp0 = memory[0x40:0x60];
        var var0 = temp0;
        var temp1 = var0 + 0xa0;
        var var1 = temp1;
    
        if (!((var1 < var0) | (var1 > 0xffffffffffffffff))) {
            memory[0x40:0x60] = var1;
            return var0;
        } else {
            var var2 = 0x4dce;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_4DF7(var arg0) returns (var r0) {
        var temp0 = memory[0x40:0x60];
        var var0 = temp0;
        var temp1 = var0 + (arg0 + 0x1f & 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0);
        var var1 = temp1;
    
        if (!((var1 < var0) | (var1 > 0xffffffffffffffff))) {
            memory[0x40:0x60] = var1;
            return var0;
        } else {
            var var2 = 0x4e3e;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_4E46(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 <= 0xffffffffffffffff) { return (arg0 << 0x05) + 0x20; }
    
        var var1 = 0x4e60;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x41;
        revert(memory[0x00:0x24]);
    }
    
    function func_4E6A(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x20;
    
        if (arg0 - arg1 i< var1) { revert(memory[0x00:0x00]); }
    
        var var2 = msg.data[arg1:arg1 + 0x20];
    
        if (var2 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1 + var2;
        var2 = temp0;
    
        if (arg0 i<= var2 + 0x1f) { revert(memory[0x00:0x00]); }
    
        var var3 = msg.data[var2:var2 + 0x20];
        var var4 = 0x4eb8;
        var var5 = 0x4eb3;
        var var6 = var3;
        var5 = func_4E46(var6);
        var4 = func_4EB3(var5);
        var temp1 = var3;
        var temp2 = var4;
        memory[temp2:temp2 + 0x20] = temp1;
        var temp3 = var1;
        var3 = temp3 + var2 + (temp1 << 0x05);
        var4 = temp2 + temp3;
        var5 = temp2;
    
        if (var3 > arg0) { revert(memory[0x00:0x00]); }
    
        var temp4 = var1 + var2;
        var5 = var5;
        var2 = temp4;
    
        if (var2 >= var3) {
        label_4EFE:
            return var5;
        } else {
        label_4EE5:
            var6 = msg.data[var2:var2 + 0x20];
            var var7 = 0x4eef;
            var var8 = var6;
            func_4D2B(var8);
            var temp5 = var4;
            memory[temp5:temp5 + 0x20] = var6;
            var temp6 = var1;
            var2 = temp6 + var2;
            var4 = temp6 + temp5;
            var5 = var5;
        
            if (var2 >= var3) { goto label_4EFE; }
            else { goto label_4EE5; }
        }
    }
    
    function func_4EB3(var arg0) returns (var r0) {
        r0 = func_4DF7(arg0);
        // Error: Could not resolve method call return address!
    }
    
    function func_4F09(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3, var r4, var r5, var r6) {
        r3 = 0x00;
        r4 = r3;
        r5 = 0x00;
        r6 = r5;
        var var4 = 0x00;
        var var5 = var4;
        var var6 = 0x00;
    
        if (arg0 - arg1 i< 0xa0) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        r3 = msg.data[temp0:temp0 + 0x20];
        r4 = msg.data[temp0 + 0x20:temp0 + 0x20 + 0x20];
        r5 = msg.data[temp0 + 0x40:temp0 + 0x40 + 0x20];
        var var7 = msg.data[temp0 + 0x60:temp0 + 0x60 + 0x20];
        var var8 = 0xffffffffffffffff;
    
        if (var7 > var8) { revert(memory[0x00:0x00]); }
    
        var var9 = 0x4f5d;
        var var10 = arg0;
        var var11 = arg1 + var7;
        var9, var10 = func_4B2E(var10, var11);
        r6 = var9;
        var4 = var10;
        var7 = msg.data[arg1 + 0x80:arg1 + 0x80 + 0x20];
    
        if (var7 > var8) { revert(memory[0x00:0x00]); }
    
        var8 = 0x4f83;
        var9 = arg0;
        var10 = arg1 + var7;
        var8, var9 = func_4B2E(var9, var10);
        r0 = r3;
        arg0 = r4;
        var temp1 = r5;
        r5 = var8;
        arg1 = temp1;
        r3 = r6;
        r4 = var4;
        r6 = var9;
        return r0, arg0, arg1, r3, r4, r5, r6;
    }
    
    function func_4F96(var arg0) {
        var temp0 = arg0;
    
        if (temp0 == !!temp0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4FA4(var arg0) returns (var r0) {
        var var0 = memory[arg0:arg0 + 0x20];
        var var1 = 0x4faf;
        var var2 = var0;
        func_4F96(var2);
        return var0;
    }
    
    function func_4FB4(var arg0) {
        var temp0 = arg0;
    
        if (temp0 == temp0 & 0xffff) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_4FC4(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var var1 = memory[arg1:arg1 + 0x20];
        var var2 = 0x20;
        var var3 = 0x4fe5;
        var var4 = 0x4eb3;
        var var5 = var1;
        var4 = func_4E46(var5);
        var3 = func_4EB3(var4);
        var temp0 = var1;
        var temp1 = var3;
        memory[temp1:temp1 + 0x20] = temp0;
        var temp2 = var2;
        var1 = temp2 + arg1 + (temp0 << 0x06);
        var4 = temp1;
        var3 = var4 + temp2;
    
        if (var1 > arg0) { revert(memory[0x00:0x00]); }
    
        var5 = arg1 + var2;
    
        if (var5 >= var1) {
        label_504C:
            return var4;
        } else {
        label_5011:
        
            if (arg0 - var5 i>= 0x40) {
                var var6 = 0x5029;
                var6 = func_4DAB();
                var temp3 = var5;
                memory[var6:var6 + 0x20] = memory[temp3:temp3 + 0x20];
                var var7 = memory[temp3 + var2:temp3 + var2 + 0x20];
                var var8 = 0x503a;
                var var9 = var7;
                func_4F96(var9);
                var temp4 = var6;
                var temp5 = var2;
                memory[temp5 + temp4:temp5 + temp4 + 0x20] = var7;
                var temp6 = var3;
                memory[temp6:temp6 + 0x20] = temp4;
                var3 = temp5 + temp6;
                var5 = var5 + 0x40;
            
                if (var5 >= var1) { goto label_504C; }
                else { goto label_5011; }
            } else {
                var6 = 0x00;
                revert(memory[var6:var6 + var6]);
            }
        }
    }
    
    function func_5057(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3, var r4, var r5, var r6, var r7) {
        r3 = 0x00;
        r4 = r3;
        r5 = 0x00;
        r6 = r5;
        r7 = 0x00;
        var var5 = r7;
        var var6 = 0x00;
        var var7 = var6;
    
        if (arg0 - arg1 i< 0x0100) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        r3 = memory[temp0:temp0 + 0x20];
        var var8 = memory[temp0 + 0x20:temp0 + 0x20 + 0x20];
        var var9 = 0x5086;
        var var10 = var8;
        func_4D2B(var10);
        r4 = var8;
        var temp1 = arg1;
        r5 = memory[temp1 + 0x40:temp1 + 0x40 + 0x20];
        r6 = memory[temp1 + 0x60:temp1 + 0x60 + 0x20];
        r7 = memory[temp1 + 0x80:temp1 + 0x80 + 0x20];
        var8 = memory[temp1 + 0xa0:temp1 + 0xa0 + 0x20];
        var9 = 0x50ad;
        var10 = var8;
        func_4F96(var10);
        var temp2 = var8;
        var8 = memory[arg1 + 0xc0:arg1 + 0xc0 + 0x20];
        var5 = temp2;
    
        if (var8 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var temp3 = arg1 + var8;
        var8 = temp3;
    
        if (arg0 i<= var8 + 0x1f) { revert(memory[0x00:0x00]); }
    
        var9 = memory[var8:var8 + 0x20];
        var10 = 0x50e9;
        var var11 = 0x4eb3;
        var var12 = var9;
        var11 = func_4E46(var12);
        var10 = func_4EB3(var11);
        var temp4 = var10;
        var11 = temp4;
        var temp5 = var9;
        memory[var11:var11 + 0x20] = temp5;
        var10 = var11 + 0x20;
        var9 = var8 + temp5 * 0xa0 + 0x20;
    
        if (var9 > arg0) { revert(memory[0x00:0x00]); }
    
        var temp6 = var8 + 0x20;
        var8 = temp6;
    
        if (var8 >= var9) {
        label_519F:
            var6 = var11;
            var8 = memory[arg1 + 0xe0:arg1 + 0xe0 + 0x20];
        
            if (var8 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
        
            var9 = 0x51cc;
            var10 = arg0;
            var11 = arg1 + var8;
            var9 = func_4FC4(var10, var11);
            var temp7 = r7;
            r7 = var9;
            var temp8 = r4;
            r4 = temp7;
            arg0 = temp8;
            var temp9 = r6;
            r6 = var6;
            var temp10 = r3;
            r3 = temp9;
            r0 = temp10;
            var temp11 = r5;
            r5 = var5;
            arg1 = temp11;
            return r0, arg0, arg1, r3, r4, r5, r6, r7;
        } else {
        label_511B:
        
            if (arg0 - var8 i< 0xa0) { revert(memory[0x00:0x00]); }
        
            var12 = 0x5132;
            var12 = func_4DD4();
            var var13 = memory[var8:var8 + 0x20];
            var var14 = 0x513d;
            var var15 = var13;
            func_4D2B(var15);
            memory[var12:var12 + 0x20] = var13;
            var13 = memory[var8 + 0x20:var8 + 0x20 + 0x20];
            var14 = 0x514d;
            var15 = var13;
            func_4D2B(var15);
            memory[var12 + 0x20:var12 + 0x20 + 0x20] = var13;
            var13 = memory[var8 + 0x40:var8 + 0x40 + 0x20];
            var14 = 0x5160;
            var15 = var13;
            func_4FB4(var15);
            memory[var12 + 0x40:var12 + 0x40 + 0x20] = var13;
            var13 = memory[var8 + 0x60:var8 + 0x60 + 0x20];
            var14 = 0x5173;
            var15 = var13;
            func_4FB4(var15);
            memory[var12 + 0x60:var12 + 0x60 + 0x20] = var13;
            var13 = memory[var8 + 0x80:var8 + 0x80 + 0x20];
            var14 = 0x5186;
            var15 = var13;
            func_4FB4(var15);
            var temp12 = var12;
            memory[temp12 + 0x80:temp12 + 0x80 + 0x20] = var13;
            var temp13 = var10;
            memory[temp13:temp13 + 0x20] = temp12;
            var8 = var8 + 0xa0;
            var10 = temp13 + 0x20;
            var11 = var11;
        
            if (var8 >= var9) { goto label_519F; }
            else { goto label_511B; }
        }
    }
    
    function func_523A(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { return arg0 + 0x01; }
    
        var var1 = 0x526b;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_5272(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 >= arg0) { return arg1 - arg0; }
    
        var var1 = 0x5284;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_5289(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 <= ~arg0) { return arg1 + arg0; }
    
        var var1 = 0x529c;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_52A1(var arg0, var arg1, var arg2) returns (var r0) {
        var temp0 = arg1;
        var temp1 = arg0;
        memory[temp1:temp1 + 0x20] = temp0;
        memory[temp1 + 0x20:temp1 + 0x20 + temp0] = msg.data[arg2:arg2 + temp0];
        memory[temp1 + temp0 + 0x20:temp1 + temp0 + 0x20 + 0x20] = 0x00;
        return temp1 + (temp0 + 0x1f & 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) + 0x20;
    }
    
    function func_52EA(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {
        var temp0 = arg4;
        memory[temp0:temp0 + 0x20] = arg0;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = arg1;
        memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = 0x60;
        var var0 = 0x00;
        var var1 = 0x530a;
        var var2 = temp0 + 0x60;
        var var3 = arg3;
        var var4 = arg2;
        return func_52A1(var2, var3, var4);
    }
    
    function func_5314(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }
    
        var var1 = msg.data[arg1:arg1 + 0x20];
        var var2 = 0x5331;
        var var3 = var1;
        func_4F96(var3);
        return var1;
    }
    
    function func_5338(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
        var var2 = msg.data[arg0:arg0 + 0x20];
    
        if (var2 i>= msg.data.length - arg1 + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1 + var2;
        var2 = temp0;
        var1 = msg.data[var2:var2 + 0x20];
    
        if (var1 > 0xffffffffffffffff) { revert(memory[0x00:0x00]); }
    
        var0 = var2 + 0x20;
    
        if (var0 i> msg.data.length - var1 * 0xa0) { revert(memory[0x00:0x00]); }
    
        arg0 = var1;
        r0 = var0;
        return r0, arg0;
    }
    
    function func_539F(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var temp0 = arg1;
    
        if (!(!!temp0 & (arg0 > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff / temp0))) { return arg1 * arg0; }
    
        var var1 = 0x53d7;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_53DC(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0) { return arg1 / arg0; }
    
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x12;
        revert(memory[0x00:0x24]);
    }
    
    function func_5417(var arg0, var arg1, var arg2) {
        var var0 = 0x00;
    
        if (var0 >= arg0) {
        label_5432:
        
            if (var0 <= arg0) { return; }
        
            memory[arg0 + arg1:arg0 + arg1 + 0x20] = 0x00;
            return;
        } else {
        label_5423:
            var temp0 = var0;
            memory[temp0 + arg1:temp0 + arg1 + 0x20] = memory[temp0 + arg2:temp0 + arg2 + 0x20];
            var0 = temp0 + 0x20;
        
            if (var0 >= arg0) { goto label_5432; }
            else { goto label_5423; }
        }
    }
    
    function func_5443(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 + 0x1f i>= arg0) { revert(memory[0x00:0x00]); }
    
        var var1 = memory[arg1:arg1 + 0x20];
    
        if (var1 <= 0xffffffffffffffff) {
            var var2 = 0x549f;
            var var3 = (var1 + 0x1f & 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) + 0x20;
            var2 = func_4DF7(var3);
            var temp0 = var1;
            memory[var2:var2 + 0x20] = temp0;
        
            if (arg1 + temp0 + 0x20 > arg0) { revert(memory[0x00:0x00]); }
        
            var3 = 0x54c5;
            var var4 = var1;
            var var5 = var2 + 0x20;
            var var6 = arg1 + 0x20;
            func_5417(var4, var5, var6);
            return var2;
        } else {
            var2 = 0x546e;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_54CD(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }
    
        var var1 = memory[arg1:arg1 + 0x20];
        var var2 = 0xffffffffffffffff;
    
        if (var1 > var2) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1 + var1;
        var2 = var2;
        var1 = temp0;
    
        if (arg0 - var1 i< 0xa0) { revert(memory[0x00:0x00]); }
    
        var var3 = 0x5513;
        var3 = func_4DD4();
        var var4 = memory[var1:var1 + 0x20];
    
        if (var4 > var2) { revert(memory[0x00:0x00]); }
    
        var var5 = 0x552e;
        var var6 = arg0;
        var var7 = var1 + var4;
        var5 = func_5443(var6, var7);
        memory[var3:var3 + 0x20] = var5;
        var4 = memory[var1 + 0x20:var1 + 0x20 + 0x20];
        var5 = 0x553f;
        var6 = var4;
        func_4FB4(var6);
        memory[var3 + 0x20:var3 + 0x20 + 0x20] = var4;
        var4 = memory[var1 + 0x40:var1 + 0x40 + 0x20];
        var5 = 0x5552;
        var6 = var4;
        func_4D2B(var6);
        memory[var3 + 0x40:var3 + 0x40 + 0x20] = var4;
        var4 = 0x5563;
        var5 = var1 + 0x60;
        var4 = func_4FA4(var5);
        memory[var3 + 0x60:var3 + 0x60 + 0x20] = var4;
        var4 = memory[var1 + 0x80:var1 + 0x80 + 0x20];
    
        if (var4 > var2) { revert(memory[0x00:0x00]); }
    
        var5 = 0x5586;
        var6 = arg0;
        var7 = var1 + var4;
        var5 = func_5443(var6, var7);
        memory[var3 + 0x80:var3 + 0x80 + 0x20] = var5;
        return var3;
    }
    
    function func_5595(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - 0x8000000000000000000000000000000000000000000000000000000000000000) { return 0x00 - arg0; }
    
        var var1 = 0x55c6;
        memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
        memory[0x04:0x24] = 0x11;
        revert(memory[0x00:0x24]);
    }
    
    function func_55CD(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) returns (var r0) {
        var temp0 = arg7;
        memory[temp0:temp0 + 0x20] = arg0;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = arg1;
        memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = arg2 & 0xffffffffffffffffffffffffffffffffffffffff;
        var var0 = temp0 + 0x0160;
        var var1 = 0xffffffffffffffffffffffffffffffffffffffff;
        var temp1 = temp0 + 0x60;
        var temp2 = arg3;
        memory[temp1:temp1 + 0x20] = memory[temp2:temp2 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
        memory[temp1 + 0x20:temp1 + 0x20 + 0x20] = memory[temp2 + 0x20:temp2 + 0x20 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
        memory[temp1 + 0x40:temp1 + 0x40 + 0x20] = memory[temp2 + 0x40:temp2 + 0x40 + 0x20] & 0xffff;
        memory[temp1 + 0x60:temp1 + 0x60 + 0x20] = memory[temp2 + 0x60:temp2 + 0x60 + 0x20] & 0xffff;
        memory[temp1 + 0x80:temp1 + 0x80 + 0x20] = memory[temp2 + 0x80:temp2 + 0x80 + 0x20] & 0xffff;
        var temp3 = arg7;
        memory[temp3 + 0x0100:temp3 + 0x0100 + 0x20] = var1 & arg4;
        memory[temp3 + 0x0120:temp3 + 0x0120 + 0x20] = !!arg5;
        memory[temp3 + 0x0140:temp3 + 0x0140 + 0x20] = arg6 & 0xff;
        return var0;
    }
    
    function func_567D(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i>= 0x20) { return memory[arg1:arg1 + 0x20]; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_56B3(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i< 0xa0) { revert(memory[0x00:0x00]); }
    
        var var1 = 0x56cd;
        var1 = func_4DD4();
        var var2 = msg.data[arg1:arg1 + 0x20];
        var var3 = 0x56d8;
        var var4 = var2;
        func_4D2B(var4);
        memory[var1:var1 + 0x20] = var2;
        var2 = msg.data[arg1 + 0x20:arg1 + 0x20 + 0x20];
        var3 = 0x56e8;
        var4 = var2;
        func_4D2B(var4);
        memory[var1 + 0x20:var1 + 0x20 + 0x20] = var2;
        var2 = msg.data[arg1 + 0x40:arg1 + 0x40 + 0x20];
        var3 = 0x56fb;
        var4 = var2;
        func_4FB4(var4);
        memory[var1 + 0x40:var1 + 0x40 + 0x20] = var2;
        var2 = msg.data[arg1 + 0x60:arg1 + 0x60 + 0x20];
        var3 = 0x570e;
        var4 = var2;
        func_4FB4(var4);
        memory[var1 + 0x60:var1 + 0x60 + 0x20] = var2;
        var2 = msg.data[arg1 + 0x80:arg1 + 0x80 + 0x20];
        var3 = 0x5721;
        var4 = var2;
        func_4FB4(var4);
        memory[var1 + 0x80:var1 + 0x80 + 0x20] = var2;
        return var1;
    }
    
    function func_588C(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg0 - arg1 i< 0x40) { revert(memory[0x00:0x00]); }
    
        var temp0 = arg1;
        var0 = memory[temp0:temp0 + 0x20];
        var var2 = memory[temp0 + 0x20:temp0 + 0x20 + 0x20];
        var var3 = 0x58b1;
        var var4 = var2;
        func_4F96(var4);
        arg0 = var2;
        r0 = var0;
        return r0, arg0;
    }
    
    function func_58BC(var arg0, var arg1, var arg2, var arg3, var arg4) returns (var r0) {
        var temp0 = arg4;
        memory[temp0:temp0 + 0x20] = arg0;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = arg1 & 0xffffffffffffffffffffffffffffffffffffffff;
        memory[temp0 + 0x40:temp0 + 0x40 + 0x20] = arg2 & 0xffff;
        var var0 = temp0 + 0x0100;
        var temp1 = temp0 + 0x60;
        var temp2 = arg3;
        memory[temp1:temp1 + 0x20] = memory[temp2:temp2 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
        memory[temp1 + 0x20:temp1 + 0x20 + 0x20] = memory[temp2 + 0x20:temp2 + 0x20 + 0x20] & 0xffffffffffffffffffffffffffffffffffffffff;
        memory[temp1 + 0x40:temp1 + 0x40 + 0x20] = memory[temp2 + 0x40:temp2 + 0x40 + 0x20] & 0xffff;
        memory[temp1 + 0x60:temp1 + 0x60 + 0x20] = memory[temp2 + 0x60:temp2 + 0x60 + 0x20] & 0xffff;
        memory[temp1 + 0x80:temp1 + 0x80 + 0x20] = memory[temp2 + 0x80:temp2 + 0x80 + 0x20] & 0xffff;
        return var0;
    }
}

Disassembly
label_0000:
	// Inputs[1] { @0007  msg.data.length }
	0000    60  PUSH1 0x80
	0002    60  PUSH1 0x40
	0004    52  MSTORE
	0005    60  PUSH1 0x04
	0007    36  CALLDATASIZE
	0008    10  LT
	0009    61  PUSH2 0x00d6
	000C    57  *JUMPI
	// Stack delta = +0
	// Outputs[1] { @0004  memory[0x40:0x60] = 0x80 }
	// Block ends with conditional jump to 0x00d6, if msg.data.length < 0x04

label_000D:
	// Incoming jump from 0x000C, if not msg.data.length < 0x04
	// Inputs[1] { @000F  msg.data[0x00:0x20] }
	000D    60  PUSH1 0x00
	000F    35  CALLDATALOAD
	0010    60  PUSH1 0xe0
	0012    1C  SHR
	0013    80  DUP1
	0014    63  PUSH4 0x9e281a98
	0019    11  GT
	001A    61  PUSH2 0x007f
	001D    57  *JUMPI
	// Stack delta = +1
	// Outputs[1] { @0012  stack[0] = msg.data[0x00:0x20] >> 0xe0 }
	// Block ends with conditional jump to 0x007f, if 0x9e281a98 > msg.data[0x00:0x20] >> 0xe0
